openapi: 3.0.1
servers:
- url: /
paths:
  services:
    get:
      tags:
      - Service
      summary: List services
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServices
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      - $ref: ../shared/parameters.yml#/configTypes
      - $ref: ../shared/parameters.yml#/roleFilter
      - $ref: ../shared/parameters.yml#/roleSemantic
      responses:
        "200":
          $ref: ../shared/services.yml#/responses/listServices
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Service
      summary: Create a services resource
      description: Create a services resource. Requires admin access.
      operationId: createService
      requestBody:
        description: A service to create
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/serviceCreate'
        required: true
      responses:
        "201":
          $ref: ../shared/standard-responses.yml#/responses/createResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
  services-id:
    get:
      tags:
      - Service
      summary: Retrieves a single service
      description: Retrieves a single service by id. Requires admin access.
      operationId: detailService
      responses:
        "200":
          $ref: ../shared/services.yml#/responses/detailService
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Service
      summary: Update all fields on a service
      description: Update all fields on a service by id. Requires admin access.
      operationId: updateService
      requestBody:
        description: A service update object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/serviceUpdate'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/updateResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
    delete:
      tags:
      - Service
      summary: Delete a service
      description: Delete a service by id. Requires admin access.
      operationId: deleteService
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/deleteResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "409":
          $ref: ../shared/standard-responses.yml#/responses/cannotDeleteReferencedResourceResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Service
      summary: Update the supplied fields on a service
      description: Update the supplied fields on a service. Requires admin access.
      operationId: patchService
      requestBody:
        description: A service patch object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/servicePatch'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/patchResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-configs:
    get:
      tags:
      - Service
      summary: List configs associated to a specific service
      description: |
        Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceConfig
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: configs.yml#/responses/listConfigs
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-service-edge-router-policies:
    get:
      tags:
      - Service
      summary: List service edge router policies that affect a specific service
      description: |
        Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServiceEdgeRouterPolicies
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: service-edge-router-policies.yml#/responses/listServiceEdgeRouterPolicies
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-service-policies:
    get:
      tags:
      - Service
      summary: List service policies that affect a specific service
      description: |
        Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServicePolicies
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: service-policies.yml#/responses/listServicePolicies
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-identities:
    get:
      tags:
      - Service
      summary: List identities with access
      description: |
        Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceIdentities
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      - $ref: ../shared/parameters.yml#/policyType
      responses:
        "200":
          $ref: identities.yml#/responses/listIdentities
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-edge-routers:
    get:
      tags:
      - Service
      summary: List accessible edge-routers
      description: |
        Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceEdgeRouters
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: edge-routers.yml#/responses/listEdgeRouters
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
  services-id-terminators:
    get:
      tags:
      - Service
      summary: List of terminators assigned to a service
      description: |
        Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.
      operationId: listServiceTerminators
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: terminators.yml#/responses/listTerminators
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
components:
  schemas:
    serviceCreate:
      required:
      - encryptionRequired
      - name
      type: object
      properties:
        name:
          type: string
        maxIdleTimeMillis:
          type: integer
        terminatorStrategy:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: Describes whether connections must support end-to-end encryption
            on both sides of the connection.
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
    serviceUpdate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        maxIdleTimeMillis:
          type: integer
        terminatorStrategy:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
    servicePatch:
      type: object
      properties:
        name:
          type: string
        maxIdleTimeMillis:
          type: integer
        terminatorStrategy:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
x-original-swagger-version: null
