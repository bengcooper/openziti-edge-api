openapi: 3.0.1
servers:
- url: /
paths:
  config-types:
    get:
      tags:
      - Config
      summary: List config-types
      description: |
        Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigTypes
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: '#/components/responses/listConfigTypes'
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Config
      summary: Create a config-type. Requires admin access.
      operationId: createConfigType
      requestBody:
        description: A config-type to create
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/configTypeCreate'
        required: true
      responses:
        "201":
          $ref: ../shared/standard-responses.yml#/responses/createResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
  config-types-id:
    get:
      tags:
      - Config
      summary: Retrieves a single config-type
      description: Retrieves a single config-type by id. Requires admin access.
      operationId: detailConfigType
      responses:
        "200":
          $ref: '#/components/responses/detailConfigType'
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Config
      summary: Update all fields on a config-type
      description: Update all fields on a config-type by id. Requires admin access.
      operationId: updateConfigType
      requestBody:
        description: A config-type update object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/configTypeUpdate'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/updateResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
    delete:
      tags:
      - Config
      summary: Delete a config-type
      description: Delete a config-type by id. Removing a configuration type that
        are in use will result in a 409 conflict HTTP status code and error. All configurations
        of a type must be removed first.
      operationId: deleteConfigType
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/deleteResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "409":
          $ref: ../shared/standard-responses.yml#/responses/cannotDeleteReferencedResourceResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Config
      summary: Update the supplied fields on a config-type
      description: Update the supplied fields on a config-type. Requires admin access.
      operationId: patchConfigType
      requestBody:
        description: A config-type patch object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/configTypePatch'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/patchResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
    parameters:
    - $ref: ../shared/parameters.yml#/id
  config-types-id-configs:
    get:
      tags:
      - Config
      summary: Lists the configs of a specific config-type
      description: Lists the configs associated to a config-type. Requires admin access.
      operationId: listConfigsForConfigType
      responses:
        "200":
          $ref: configs.yml#/responses/listConfigs
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - $ref: ../shared/parameters.yml#/id
components:
  schemas:
    listConfigTypesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        meta:
          $ref: ../shared/standard-responses.yml#/definitions/meta
        data:
          $ref: '#/components/schemas/configTypeList'
    detailConfigTypeEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        meta:
          $ref: ../shared/standard-responses.yml#/definitions/meta
        data:
          $ref: '#/components/schemas/configTypeDetail'
    configTypeList:
      type: array
      description: An array of config-type resources
      items:
        $ref: '#/components/schemas/configTypeDetail'
    configTypeDetail:
      description: A config-type resource
      allOf:
      - $ref: ../shared/base-entity.yml#/definitions/baseEntity
      - required:
        - name
        - schema
        type: object
        properties:
          name:
            type: string
            example: ziti-tunneler-server.v1
          schema:
            type: object
            additionalProperties: true
            description: A JSON schema to enforce configuration against
    configTypeCreate:
      required:
      - name
      type: object
      properties:
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
      description: A config-type create object
    configTypeUpdate:
      required:
      - name
      type: object
      properties:
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
      description: A config-type update object
    configTypePatch:
      type: object
      properties:
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
      description: A config-type patch object
  responses:
    listConfigTypes:
      description: A list of config-types
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/listConfigTypesEnvelope'
    detailConfigType:
      description: A singular config-type resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/detailConfigTypeEnvelope'
x-original-swagger-version: null
