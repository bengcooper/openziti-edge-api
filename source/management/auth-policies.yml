openapi: 3.0.1
servers:
- url: /
paths:
  auth-policies:
    get:
      tags:
      - Auth Policy
      summary: List Auth Policies
      description: Retrieves a list of Auth Policies
      operationId: listAuthPolicies
      parameters:
      - $ref: ../shared/parameters.yml#/limit
      - $ref: ../shared/parameters.yml#/offset
      - $ref: ../shared/parameters.yml#/filter
      responses:
        "200":
          $ref: '#/components/responses/listAuthPolicies'
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Auth Policy
      summary: Creates an Auth Policy
      description: Creates an Auth Policy. Requires admin access.
      operationId: createAuthPolicy
      requestBody:
        description: An Auth Policy to create
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/authPolicyCreate'
        required: true
      responses:
        "201":
          $ref: ../shared/standard-responses.yml#/responses/createResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
  auth-policies-id:
    get:
      tags:
      - Auth Policy
      summary: Retrieves a single Auth Policy
      description: Retrieves a single Auth Policy by id. Requires admin access.
      operationId: detailAuthPolicy
      responses:
        "200":
          $ref: '#/components/responses/detailAuthPolicy'
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Auth Policy
      summary: Update all fields on an Auth Policy
      description: Update all fields on an Auth Policy by id. Requires admin access.
      operationId: updateAuthPolicy
      requestBody:
        description: An Auth Policy update object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/authPolicyUpdate'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/updateResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
    delete:
      tags:
      - Auth Policy
      summary: Delete an Auth Policy
      description: |
        Delete an Auth Policy by id. Requires admin access.
      operationId: deleteAuthPolicy
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/deleteResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Auth Policy
      summary: Update the supplied fields on an Auth Policy
      description: Update only the supplied fields on an Auth Policy by id. Requires
        admin access.
      operationId: patchAuthPolicy
      requestBody:
        description: An Auth Policy patch object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/authPolicyPatch'
        required: true
      responses:
        "200":
          $ref: ../shared/standard-responses.yml#/responses/patchResponse
        "400":
          $ref: ../shared/standard-responses.yml#/responses/badRequestResponse
        "404":
          $ref: ../shared/standard-responses.yml#/responses/notFoundResponse
        "401":
          $ref: ../shared/standard-responses.yml#/responses/unauthorizedResponse
        "429":
          $ref: ../shared/standard-responses.yml#/responses/rateLimitedResponse
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
    parameters:
    - $ref: ../shared/parameters.yml#/id
components:
  schemas:
    listAuthPoliciesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        meta:
          $ref: ../shared/standard-responses.yml#/definitions/meta
        data:
          $ref: '#/components/schemas/authPolicyList'
    detailAuthPolicyEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        meta:
          $ref: ../shared/standard-responses.yml#/definitions/meta
        data:
          $ref: '#/components/schemas/authPolicyDetail'
    authPolicyList:
      type: array
      description: An array of Auth Policies resources
      items:
        $ref: '#/components/schemas/authPolicyDetail'
    authPolicyPrimary:
      required:
      - cert
      - extJwt
      - updb
      type: object
      properties:
        updb:
          $ref: '#/components/schemas/authPolicyPrimaryUpdb'
        cert:
          $ref: '#/components/schemas/authPolicyPrimaryCert'
        extJwt:
          $ref: '#/components/schemas/authPolicyPrimaryExtJwt'
    authPolicyPrimaryUpdb:
      required:
      - allowed
      - lockoutDurationMinutes
      - maxAttempts
      - minPasswordLength
      - requireMixedCase
      - requireNumberChar
      - requireSpecialChar
      type: object
      properties:
        allowed:
          type: boolean
        minPasswordLength:
          type: integer
        requireSpecialChar:
          type: boolean
        requireNumberChar:
          type: boolean
        requireMixedCase:
          type: boolean
        maxAttempts:
          type: integer
        lockoutDurationMinutes:
          type: integer
    authPolicyPrimaryCert:
      required:
      - allowExpiredCerts
      - allowed
      type: object
      properties:
        allowed:
          type: boolean
        allowExpiredCerts:
          type: boolean
    authPolicyPrimaryExtJwt:
      required:
      - allowed
      - allowedSigners
      type: object
      properties:
        allowed:
          type: boolean
        allowedSigners:
          type: array
          items:
            type: string
    authPolicySecondary:
      required:
      - requireTotp
      type: object
      properties:
        requireTotp:
          type: boolean
        requireExtJwtSigner:
          type: string
          nullable: true
          x-omit-empty: false
    authPolicyPrimaryPatch:
      type: object
      properties:
        updb:
          $ref: '#/components/schemas/authPolicyPrimaryUpdbPatch'
        cert:
          $ref: '#/components/schemas/authPolicyPrimaryCertPatch'
        extJwt:
          $ref: '#/components/schemas/authPolicyPrimaryExtJwtPatch'
    authPolicyPrimaryUpdbPatch:
      type: object
      properties:
        allowed:
          type: boolean
          nullable: true
        minPasswordLength:
          type: integer
          nullable: true
        requireSpecialChar:
          type: boolean
          nullable: true
        requireNumberChar:
          type: boolean
          nullable: true
        requireMixedCase:
          type: boolean
          nullable: true
        maxAttempts:
          type: integer
          nullable: true
        lockoutDurationMinutes:
          type: integer
          nullable: true
      nullable: true
      x-nullable: true
    authPolicyPrimaryCertPatch:
      type: object
      properties:
        allowed:
          type: boolean
          nullable: true
        allowExpiredCerts:
          type: boolean
          nullable: true
      nullable: true
      x-nullable: true
    authPolicyPrimaryExtJwtPatch:
      type: object
      properties:
        allowed:
          type: boolean
          nullable: true
        allowedSigners:
          type: array
          nullable: true
          items:
            type: string
      nullable: true
      x-nullable: true
    authPolicySecondaryPatch:
      type: object
      properties:
        requireTotp:
          type: boolean
          nullable: true
        requireExtJwtSigner:
          type: string
          nullable: true
      nullable: true
      x-nullable: true
    authPolicyDetail:
      description: A Auth Policy resource
      allOf:
      - $ref: ../shared/base-entity.yml#/definitions/baseEntity
      - required:
        - name
        - primary
        - secondary
        type: object
        properties:
          name:
            type: string
          primary:
            $ref: '#/components/schemas/authPolicyPrimary'
          secondary:
            $ref: '#/components/schemas/authPolicySecondary'
    authPolicyCreate:
      required:
      - name
      - primary
      - secondary
      type: object
      properties:
        name:
          type: string
        primary:
          $ref: '#/components/schemas/authPolicyPrimary'
        secondary:
          $ref: '#/components/schemas/authPolicySecondary'
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
      description: A Auth Policy resource
    authPolicyUpdate:
      $ref: '#/components/schemas/authPolicyCreate'
    authPolicyPatch:
      type: object
      properties:
        name:
          type: string
          nullable: true
        primary:
          $ref: '#/components/schemas/authPolicyPrimaryPatch'
        secondary:
          $ref: '#/components/schemas/authPolicySecondaryPatch'
        tags:
          $ref: ../shared/base-entity.yml#/definitions/tags
      description: A Auth Policy resource
  responses:
    listAuthPolicies:
      description: A list of Auth Policies
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/listAuthPoliciesEnvelope'
    detailAuthPolicy:
      description: A singular Auth Policy resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/detailAuthPolicyEnvelope'
x-original-swagger-version: null
