// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package enroll

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ExtendRouterEnrollmentReader is a Reader for the ExtendRouterEnrollment structure.
type ExtendRouterEnrollmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExtendRouterEnrollmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExtendRouterEnrollmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExtendRouterEnrollmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewExtendRouterEnrollmentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /enroll/extend/router] extendRouterEnrollment", response, response.Code())
	}
}

// NewExtendRouterEnrollmentOK creates a ExtendRouterEnrollmentOK with default headers values
func NewExtendRouterEnrollmentOK() *ExtendRouterEnrollmentOK {
	return &ExtendRouterEnrollmentOK{}
}

/*
ExtendRouterEnrollmentOK describes a response with status code 200, with default header values.

A response containing the edge routers new signed certificates (server chain, server cert, CAs).
*/
type ExtendRouterEnrollmentOK struct {
	Payload *rest_model.EnrollmentCertsEnvelope
}

// IsSuccess returns true when this extend router enrollment o k response has a 2xx status code
func (o *ExtendRouterEnrollmentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this extend router enrollment o k response has a 3xx status code
func (o *ExtendRouterEnrollmentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend router enrollment o k response has a 4xx status code
func (o *ExtendRouterEnrollmentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this extend router enrollment o k response has a 5xx status code
func (o *ExtendRouterEnrollmentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this extend router enrollment o k response a status code equal to that given
func (o *ExtendRouterEnrollmentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the extend router enrollment o k response
func (o *ExtendRouterEnrollmentOK) Code() int {
	return 200
}

func (o *ExtendRouterEnrollmentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentOK %s", 200, payload)
}

func (o *ExtendRouterEnrollmentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentOK %s", 200, payload)
}

func (o *ExtendRouterEnrollmentOK) GetPayload() *rest_model.EnrollmentCertsEnvelope {
	return o.Payload
}

func (o *ExtendRouterEnrollmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.EnrollmentCertsEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtendRouterEnrollmentUnauthorized creates a ExtendRouterEnrollmentUnauthorized with default headers values
func NewExtendRouterEnrollmentUnauthorized() *ExtendRouterEnrollmentUnauthorized {
	return &ExtendRouterEnrollmentUnauthorized{}
}

/*
ExtendRouterEnrollmentUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ExtendRouterEnrollmentUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this extend router enrollment unauthorized response has a 2xx status code
func (o *ExtendRouterEnrollmentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend router enrollment unauthorized response has a 3xx status code
func (o *ExtendRouterEnrollmentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend router enrollment unauthorized response has a 4xx status code
func (o *ExtendRouterEnrollmentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend router enrollment unauthorized response has a 5xx status code
func (o *ExtendRouterEnrollmentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this extend router enrollment unauthorized response a status code equal to that given
func (o *ExtendRouterEnrollmentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the extend router enrollment unauthorized response
func (o *ExtendRouterEnrollmentUnauthorized) Code() int {
	return 401
}

func (o *ExtendRouterEnrollmentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentUnauthorized %s", 401, payload)
}

func (o *ExtendRouterEnrollmentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentUnauthorized %s", 401, payload)
}

func (o *ExtendRouterEnrollmentUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ExtendRouterEnrollmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtendRouterEnrollmentTooManyRequests creates a ExtendRouterEnrollmentTooManyRequests with default headers values
func NewExtendRouterEnrollmentTooManyRequests() *ExtendRouterEnrollmentTooManyRequests {
	return &ExtendRouterEnrollmentTooManyRequests{}
}

/*
ExtendRouterEnrollmentTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ExtendRouterEnrollmentTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this extend router enrollment too many requests response has a 2xx status code
func (o *ExtendRouterEnrollmentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extend router enrollment too many requests response has a 3xx status code
func (o *ExtendRouterEnrollmentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extend router enrollment too many requests response has a 4xx status code
func (o *ExtendRouterEnrollmentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this extend router enrollment too many requests response has a 5xx status code
func (o *ExtendRouterEnrollmentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this extend router enrollment too many requests response a status code equal to that given
func (o *ExtendRouterEnrollmentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the extend router enrollment too many requests response
func (o *ExtendRouterEnrollmentTooManyRequests) Code() int {
	return 429
}

func (o *ExtendRouterEnrollmentTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentTooManyRequests %s", 429, payload)
}

func (o *ExtendRouterEnrollmentTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /enroll/extend/router][%d] extendRouterEnrollmentTooManyRequests %s", 429, payload)
}

func (o *ExtendRouterEnrollmentTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ExtendRouterEnrollmentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
