// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package posture_checks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// CreatePostureResponseReader is a Reader for the CreatePostureResponse structure.
type CreatePostureResponseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePostureResponseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePostureResponseCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePostureResponseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreatePostureResponseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreatePostureResponseTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /posture-response] createPostureResponse", response, response.Code())
	}
}

// NewCreatePostureResponseCreated creates a CreatePostureResponseCreated with default headers values
func NewCreatePostureResponseCreated() *CreatePostureResponseCreated {
	return &CreatePostureResponseCreated{}
}

/*
CreatePostureResponseCreated describes a response with status code 201, with default header values.

Contains a list of services that have had their timers altered
*/
type CreatePostureResponseCreated struct {
	Payload *rest_model.PostureResponseEnvelope
}

// IsSuccess returns true when this create posture response created response has a 2xx status code
func (o *CreatePostureResponseCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create posture response created response has a 3xx status code
func (o *CreatePostureResponseCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create posture response created response has a 4xx status code
func (o *CreatePostureResponseCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create posture response created response has a 5xx status code
func (o *CreatePostureResponseCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create posture response created response a status code equal to that given
func (o *CreatePostureResponseCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create posture response created response
func (o *CreatePostureResponseCreated) Code() int {
	return 201
}

func (o *CreatePostureResponseCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseCreated %s", 201, payload)
}

func (o *CreatePostureResponseCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseCreated %s", 201, payload)
}

func (o *CreatePostureResponseCreated) GetPayload() *rest_model.PostureResponseEnvelope {
	return o.Payload
}

func (o *CreatePostureResponseCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.PostureResponseEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePostureResponseBadRequest creates a CreatePostureResponseBadRequest with default headers values
func NewCreatePostureResponseBadRequest() *CreatePostureResponseBadRequest {
	return &CreatePostureResponseBadRequest{}
}

/*
CreatePostureResponseBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type CreatePostureResponseBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create posture response bad request response has a 2xx status code
func (o *CreatePostureResponseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create posture response bad request response has a 3xx status code
func (o *CreatePostureResponseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create posture response bad request response has a 4xx status code
func (o *CreatePostureResponseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create posture response bad request response has a 5xx status code
func (o *CreatePostureResponseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create posture response bad request response a status code equal to that given
func (o *CreatePostureResponseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create posture response bad request response
func (o *CreatePostureResponseBadRequest) Code() int {
	return 400
}

func (o *CreatePostureResponseBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseBadRequest %s", 400, payload)
}

func (o *CreatePostureResponseBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseBadRequest %s", 400, payload)
}

func (o *CreatePostureResponseBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreatePostureResponseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePostureResponseUnauthorized creates a CreatePostureResponseUnauthorized with default headers values
func NewCreatePostureResponseUnauthorized() *CreatePostureResponseUnauthorized {
	return &CreatePostureResponseUnauthorized{}
}

/*
CreatePostureResponseUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type CreatePostureResponseUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create posture response unauthorized response has a 2xx status code
func (o *CreatePostureResponseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create posture response unauthorized response has a 3xx status code
func (o *CreatePostureResponseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create posture response unauthorized response has a 4xx status code
func (o *CreatePostureResponseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create posture response unauthorized response has a 5xx status code
func (o *CreatePostureResponseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create posture response unauthorized response a status code equal to that given
func (o *CreatePostureResponseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create posture response unauthorized response
func (o *CreatePostureResponseUnauthorized) Code() int {
	return 401
}

func (o *CreatePostureResponseUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseUnauthorized %s", 401, payload)
}

func (o *CreatePostureResponseUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseUnauthorized %s", 401, payload)
}

func (o *CreatePostureResponseUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreatePostureResponseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePostureResponseTooManyRequests creates a CreatePostureResponseTooManyRequests with default headers values
func NewCreatePostureResponseTooManyRequests() *CreatePostureResponseTooManyRequests {
	return &CreatePostureResponseTooManyRequests{}
}

/*
CreatePostureResponseTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type CreatePostureResponseTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create posture response too many requests response has a 2xx status code
func (o *CreatePostureResponseTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create posture response too many requests response has a 3xx status code
func (o *CreatePostureResponseTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create posture response too many requests response has a 4xx status code
func (o *CreatePostureResponseTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create posture response too many requests response has a 5xx status code
func (o *CreatePostureResponseTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create posture response too many requests response a status code equal to that given
func (o *CreatePostureResponseTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create posture response too many requests response
func (o *CreatePostureResponseTooManyRequests) Code() int {
	return 429
}

func (o *CreatePostureResponseTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseTooManyRequests %s", 429, payload)
}

func (o *CreatePostureResponseTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /posture-response][%d] createPostureResponseTooManyRequests %s", 429, payload)
}

func (o *CreatePostureResponseTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreatePostureResponseTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
