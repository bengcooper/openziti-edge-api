// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// CreateSessionReader is a Reader for the CreateSession structure.
type CreateSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateSessionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateSessionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /sessions] createSession", response, response.Code())
	}
}

// NewCreateSessionCreated creates a CreateSessionCreated with default headers values
func NewCreateSessionCreated() *CreateSessionCreated {
	return &CreateSessionCreated{}
}

/*
CreateSessionCreated describes a response with status code 201, with default header values.

The create request was successful and the resource has been added at the following location
*/
type CreateSessionCreated struct {
	Payload *rest_model.SessionCreateEnvelope
}

// IsSuccess returns true when this create session created response has a 2xx status code
func (o *CreateSessionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create session created response has a 3xx status code
func (o *CreateSessionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create session created response has a 4xx status code
func (o *CreateSessionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create session created response has a 5xx status code
func (o *CreateSessionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create session created response a status code equal to that given
func (o *CreateSessionCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create session created response
func (o *CreateSessionCreated) Code() int {
	return 201
}

func (o *CreateSessionCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionCreated %s", 201, payload)
}

func (o *CreateSessionCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionCreated %s", 201, payload)
}

func (o *CreateSessionCreated) GetPayload() *rest_model.SessionCreateEnvelope {
	return o.Payload
}

func (o *CreateSessionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.SessionCreateEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionBadRequest creates a CreateSessionBadRequest with default headers values
func NewCreateSessionBadRequest() *CreateSessionBadRequest {
	return &CreateSessionBadRequest{}
}

/*
CreateSessionBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type CreateSessionBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create session bad request response has a 2xx status code
func (o *CreateSessionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create session bad request response has a 3xx status code
func (o *CreateSessionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create session bad request response has a 4xx status code
func (o *CreateSessionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create session bad request response has a 5xx status code
func (o *CreateSessionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create session bad request response a status code equal to that given
func (o *CreateSessionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create session bad request response
func (o *CreateSessionBadRequest) Code() int {
	return 400
}

func (o *CreateSessionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionBadRequest %s", 400, payload)
}

func (o *CreateSessionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionBadRequest %s", 400, payload)
}

func (o *CreateSessionBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionUnauthorized creates a CreateSessionUnauthorized with default headers values
func NewCreateSessionUnauthorized() *CreateSessionUnauthorized {
	return &CreateSessionUnauthorized{}
}

/*
CreateSessionUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type CreateSessionUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create session unauthorized response has a 2xx status code
func (o *CreateSessionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create session unauthorized response has a 3xx status code
func (o *CreateSessionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create session unauthorized response has a 4xx status code
func (o *CreateSessionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create session unauthorized response has a 5xx status code
func (o *CreateSessionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create session unauthorized response a status code equal to that given
func (o *CreateSessionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create session unauthorized response
func (o *CreateSessionUnauthorized) Code() int {
	return 401
}

func (o *CreateSessionUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionUnauthorized %s", 401, payload)
}

func (o *CreateSessionUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionUnauthorized %s", 401, payload)
}

func (o *CreateSessionUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionNotFound creates a CreateSessionNotFound with default headers values
func NewCreateSessionNotFound() *CreateSessionNotFound {
	return &CreateSessionNotFound{}
}

/*
CreateSessionNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type CreateSessionNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create session not found response has a 2xx status code
func (o *CreateSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create session not found response has a 3xx status code
func (o *CreateSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create session not found response has a 4xx status code
func (o *CreateSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create session not found response has a 5xx status code
func (o *CreateSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create session not found response a status code equal to that given
func (o *CreateSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create session not found response
func (o *CreateSessionNotFound) Code() int {
	return 404
}

func (o *CreateSessionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionNotFound %s", 404, payload)
}

func (o *CreateSessionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionNotFound %s", 404, payload)
}

func (o *CreateSessionNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSessionTooManyRequests creates a CreateSessionTooManyRequests with default headers values
func NewCreateSessionTooManyRequests() *CreateSessionTooManyRequests {
	return &CreateSessionTooManyRequests{}
}

/*
CreateSessionTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type CreateSessionTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create session too many requests response has a 2xx status code
func (o *CreateSessionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create session too many requests response has a 3xx status code
func (o *CreateSessionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create session too many requests response has a 4xx status code
func (o *CreateSessionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create session too many requests response has a 5xx status code
func (o *CreateSessionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create session too many requests response a status code equal to that given
func (o *CreateSessionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create session too many requests response
func (o *CreateSessionTooManyRequests) Code() int {
	return 429
}

func (o *CreateSessionTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionTooManyRequests %s", 429, payload)
}

func (o *CreateSessionTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /sessions][%d] createSessionTooManyRequests %s", 429, payload)
}

func (o *CreateSessionTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateSessionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
