openapi: 3.0.1
info:
  title: Ziti Edge Management
  description: OpenZiti Edge Management API
  contact:
    name: OpenZiti
    url: https://openziti.discourse.group
    email: help@openziti.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.26.30
servers:
- url: https://demo.ziti.dev/edge/management/v1
paths:
  /:
    get:
      tags:
      - Informational
      summary: Returns version information
      operationId: listRoot
      responses:
        "200":
          description: Version information for the controller
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listVersionEnvelope'
      security: []
  /.well-known/est/cacerts:
    get:
      tags:
      - Well Known
      summary: Get CA Cert Store
      description: |
        This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.
        This endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library
        that supports parsing PKCS7 stores.
      operationId: listWellKnownCas
      responses:
        "200":
          description: A base64 encoded PKCS7 store
          content:
            application/pkcs7-mime:
              schema:
                type: string
                example: |
                  MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG
                  BjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw
                  FQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD
                  VQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl
                  IEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx
                  ODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI
                  DA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg
                  TmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv
                  dW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
                  CgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z
                  KIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ
                  NJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa
                  VK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl
                  7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s
                  6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb
                  QGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010
                  XdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU
                  He16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW
                  ghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb
                  ryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw
                  HQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu
                  OuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD
                  AgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE
                  gRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS
                  Cpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7
                  KOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+
                  rMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X
                  6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI
                  Fximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN
                  8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw
                  BHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2
                  YSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo
                  LLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq
                  dH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB
                  lzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH
                  DAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv
                  dW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5
                  IFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG
                  A1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy
                  bG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg
                  Q2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg
                  Q0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD
                  DIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw
                  HDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f
                  WsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV
                  XO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv
                  pnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD
                  w2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI
                  KyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo
                  783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm
                  pQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE
                  WFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F
                  6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa
                  bADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD
                  VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB
                  ACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy
                  3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY
                  uEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn
                  cCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS
                  WI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg
                  AX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO
                  wEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y
                  qQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m
                  fGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh
                  dprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8
                  3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==
      security: []
  /api-sessions:
    get:
      tags:
      - API Session
      summary: List active API sessions
      description: |
        Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint
        requires admin access.
      operationId: listAPISessions
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of active API Sessions
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/listApiSessionsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /api-sessions/{id}:
    get:
      tags:
      - API Session
      summary: Retrieves a single API Session
      description: Retrieves a single API Session by id. Requires admin access.
      operationId: detailAPISessions
      responses:
        "200":
          description: Retrieves a singular API Session by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailApiSessionEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    delete:
      tags:
      - API Session
      summary: Deletes an API Sessions
      description: Deletes and API sesion by id. Requires admin access.
      operationId: deleteAPISessions
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "403":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /auth-policies:
    get:
      tags:
      - Auth Policy
      summary: List Auth Policies
      description: Retrieves a list of Auth Policies
      operationId: listAuthPolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of Auth Policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAuthPoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Auth Policy
      summary: Creates an Auth Policy
      description: Creates an Auth Policy. Requires admin access.
      operationId: createAuthPolicy
      requestBody:
        description: An Auth Policy to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authPolicyCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
  /auth-policies/{id}:
    get:
      tags:
      - Auth Policy
      summary: Retrieves a single Auth Policy
      description: Retrieves a single Auth Policy by id. Requires admin access.
      operationId: detailAuthPolicy
      responses:
        "200":
          description: A singular Auth Policy resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailAuthPolicyEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Auth Policy
      summary: Update all fields on an Auth Policy
      description: Update all fields on an Auth Policy by id. Requires admin access.
      operationId: updateAuthPolicy
      requestBody:
        description: An Auth Policy update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authPolicyUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
    delete:
      tags:
      - Auth Policy
      summary: Delete an Auth Policy
      description: |
        Delete an Auth Policy by id. Requires admin access.
      operationId: deleteAuthPolicy
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Auth Policy
      summary: Update the supplied fields on an Auth Policy
      description: Update only the supplied fields on an Auth Policy by id. Requires
        admin access.
      operationId: patchAuthPolicy
      requestBody:
        description: An Auth Policy patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authPolicyPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authPolicy
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /authenticate:
    post:
      tags:
      - Authentication
      summary: Authenticate via a method supplied via a query string parameter
      description: |
        Allowed authentication methods include "password", "cert", and "ext-jwt"
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticate'
        required: false
      responses:
        "200":
          description: The API session associated with the session used to issue the
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currentApiSessionDetailEnvelope'
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The authentication request could not be processed as the credentials
            are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: INVALID_AUTH
                  message: The authentication request failed
                  requestId: 5952ed10-3091-474f-a691-47ebab6990dc
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security: []
      x-codegen-request-body-name: auth
    parameters:
    - name: method
      in: query
      required: true
      schema:
        type: string
        enum:
        - password
        - cert
        - ext-jwt
  /authenticate/mfa:
    post:
      tags:
      - Authentication
      - MFA
      summary: Complete MFA authentication
      description: Completes MFA authentication by submitting a MFA time based one
        time token or backup code.
      operationId: authenticateMfa
      requestBody:
        description: An MFA validation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfaCode'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: mfaAuth
  /authenticators:
    get:
      tags:
      - Authenticator
      summary: List authenticators
      description: |
        Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.
        This endpoint requires admin access.
      operationId: listAuthenticators
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of authenticators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAuthenticatorsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Authenticator
      summary: Creates an authenticator
      description: |
        Creates an authenticator for a specific identity. Requires admin access.
      operationId: createAuthenticator
      requestBody:
        description: A Authenticator create object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticatorCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authenticator
  /authenticators/{id}:
    get:
      tags:
      - Authenticator
      summary: Retrieves a single authenticator
      description: Retrieves a single authenticator by id. Requires admin access.
      operationId: detailAuthenticator
      responses:
        "200":
          description: A singular authenticator resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailAuthenticatorEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Authenticator
      summary: Update all fields on an authenticator
      description: Update all fields on an authenticator by id. Requires admin access.
      operationId: updateAuthenticator
      requestBody:
        description: An authenticator put object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticatorUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authenticator
    delete:
      tags:
      - Authenticator
      summary: Delete an Authenticator
      description: |
        Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.
        Requires admin access.
      operationId: deleteAuthenticator
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Authenticator
      summary: Update the supplied fields on an authenticator
      description: Update the supplied fields on an authenticator by id. Requires
        admin access.
      operationId: patchAuthenticator
      requestBody:
        description: An authenticator patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticatorPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authenticator
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /authenticators/{id}/re-enroll:
    post:
      tags:
      - Authenticator
      summary: Reverts an authenticator to an enrollment
      description: "Allows an authenticator to be reverted to an enrollment and allows\
        \ re-enrollment to occur. On success the \ncreated enrollment record response\
        \ is provided and the source authenticator record will be deleted. The \n\
        enrollment created depends on the authenticator. UPDB authenticators result\
        \ in UPDB enrollments, CERT\nauthenticators result in OTT enrollments, CERT\
        \ + CA authenticators result in OTTCA enrollments.\n"
      operationId: reEnrollAuthenticator
      requestBody:
        description: A reEnrollment request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reEnroll'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: reEnroll
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /cas:
    get:
      tags:
      - Certificate Authority
      summary: List CAs
      description: "Retrieves a list of CA resources; supports filtering, sorting,\
        \ and pagination. Requires admin access."
      operationId: listCas
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of Certificate Authorities (CAs)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCasEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Certificate Authority
      summary: Creates a CA
      description: Creates a CA in an unverified state. Requires admin access.
      operationId: createCa
      requestBody:
        description: A CA to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: ca
  /cas/{id}:
    get:
      tags:
      - Certificate Authority
      summary: Retrieves a single CA
      description: Retrieves a single CA by id. Requires admin access.
      operationId: detailCa
      responses:
        "200":
          description: A singular Certificate Authority (CA) resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailCaEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Certificate Authority
      summary: Update all fields on a CA
      description: Update all fields on a CA by id. Requires admin access.
      operationId: updateCa
      requestBody:
        description: A CA update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: ca
    delete:
      tags:
      - Certificate Authority
      summary: Delete a CA
      description: |
        Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it
        impossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.
      operationId: deleteCa
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Certificate Authority
      summary: Update the supplied fields on a CA
      description: Update only the supplied fields on a CA by id. Requires admin access.
      operationId: patchCa
      requestBody:
        description: A CA patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: ca
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /cas/{id}/jwt:
    get:
      tags:
      - Certificate Authority
      summary: Retrieve the enrollment JWT for a CA
      description: |
        For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides
        the jwt as a text response.
      operationId: getCaJwt
      responses:
        "200":
          description: The result is the JWT text to validate the CA
          content:
            application/jwt:
              schema:
                type: string
              example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI
                4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E
                zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK
                2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx-
                UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/jwt:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/jwt:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/jwt:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /cas/{id}/verify:
    post:
      tags:
      - Certificate Authority
      summary: Verify a CA
      description: |
        Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.
        The common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not
        be used for enrollment/authentication. Requires admin access.
      operationId: verifyCa
      requestBody:
        description: A PEM formatted certificate signed by the target CA with the
          common name matching the CA's validationToken
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: certificate
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /config-types:
    get:
      tags:
      - Config
      summary: List config-types
      description: |
        Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigTypes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of config-types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listConfigTypesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Config
      summary: Create a config-type. Requires admin access.
      operationId: createConfigType
      requestBody:
        description: A config-type to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTypeCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
  /config-types/{id}:
    get:
      tags:
      - Config
      summary: Retrieves a single config-type
      description: Retrieves a single config-type by id. Requires admin access.
      operationId: detailConfigType
      responses:
        "200":
          description: A singular config-type resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailConfigTypeEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Config
      summary: Update all fields on a config-type
      description: Update all fields on a config-type by id. Requires admin access.
      operationId: updateConfigType
      requestBody:
        description: A config-type update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTypeUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
    delete:
      tags:
      - Config
      summary: Delete a config-type
      description: Delete a config-type by id. Removing a configuration type that
        are in use will result in a 409 conflict HTTP status code and error. All configurations
        of a type must be removed first.
      operationId: deleteConfigType
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Config
      summary: Update the supplied fields on a config-type
      description: Update the supplied fields on a config-type. Requires admin access.
      operationId: patchConfigType
      requestBody:
        description: A config-type patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configTypePatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: configType
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /config-types/{id}/configs:
    get:
      tags:
      - Config
      summary: Lists the configs of a specific config-type
      description: Lists the configs associated to a config-type. Requires admin access.
      operationId: listConfigsForConfigType
      responses:
        "200":
          description: A list of configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listConfigsEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /configs:
    get:
      tags:
      - Config
      summary: List configs
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigs
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listConfigsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Config
      summary: Create a config resource
      description: Create a config resource. Requires admin access.
      operationId: createConfig
      requestBody:
        description: A config to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: config
  /configs/{id}:
    get:
      tags:
      - Config
      summary: Retrieves a single config
      description: Retrieves a single config by id. Requires admin access.
      operationId: detailConfig
      responses:
        "200":
          description: A singular config resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailConfigEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Config
      summary: Update all fields on a config
      description: Update all fields on a config by id. Requires admin access.
      operationId: updateConfig
      requestBody:
        description: A config update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: config
    delete:
      tags:
      - Config
      summary: Delete a config
      description: Delete a config by id. Requires admin access.
      operationId: deleteConfig
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Config
      summary: Update the supplied fields on a config
      description: Update the supplied fields on a config. Requires admin access.
      operationId: patchConfig
      requestBody:
        description: A config patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: config
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /configs/{id}/services:
    get:
      tags:
      - Config
      summary: List services referenced by a config
      description: |
        Retrieves a list of service resources that reference a given config; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigServices
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "400":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /controllers:
    get:
      tags:
      - Controllers
      summary: List controllers
      description: Retrieves a list of controllers
      operationId: listControllers
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of controllers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listControllersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-api-session:
    get:
      tags:
      - Current API Session
      summary: Return the current API session
      description: Retrieves the API session that was used to issue the current request
      operationId: getCurrentAPISession
      responses:
        "200":
          description: The API session associated with the session used to issue the
            request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currentApiSessionDetailEnvelope'
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    delete:
      tags:
      - Current API Session
      summary: Logout
      description: Terminates the current API session
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-identity:
    get:
      tags:
      - Current Identity
      summary: Return the current identity
      description: Returns the identity associated with the API sessions used to issue
        the current request
      operationId: getCurrentIdentity
      responses:
        "200":
          description: The identity associated with the API Session used to issue
            the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currentIdentityDetailEnvelope'
            default:
              example:
                data:
                  _links:
                    edge-router-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers
                    self:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    service-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities
                  authenticators:
                    updb:
                      username: admin
                  createdAt: 2020-01-13T16:38:13.6854788Z
                  enrollment: {}
                  id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                  isAdmin: true
                  isDefaultAdmin: true
                  name: Default Admin
                  roleAttributes: []
                  tags: {}
                  type:
                    _links:
                      self:
                        href: ./identity-types/User
                    id: User
                    name: User
                    urlName: identity-types
                  updatedAt: 2020-01-13T16:38:13.6854788Z
                meta: {}
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-identity/authenticators:
    get:
      tags:
      - Current API Session
      summary: List authenticators for the current identity
      description: "Retrieves a list of authenticators assigned to the current API\
        \ session's identity; supports filtering, sorting, and pagination."
      operationId: listCurrentIdentityAuthenticators
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of authenticators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAuthenticatorsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-identity/authenticators/{id}:
    get:
      tags:
      - Current API Session
      summary: Retrieve an authenticator for the current identity
      description: Retrieves a single authenticator by id. Will only show authenticators
        assigned to the API session's identity.
      operationId: detailCurrentIdentityAuthenticator
      responses:
        "200":
          description: A singular authenticator resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailAuthenticatorEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Current API Session
      summary: Update all fields on an authenticator of this identity
      description: |
        Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session's
        identity.
      operationId: updateCurrentIdentityAuthenticator
      requestBody:
        description: An authenticator put object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticatorUpdateWithCurrent'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authenticator
    patch:
      tags:
      - Current API Session
      summary: Update the supplied fields on an authenticator of this identity
      description: |
        Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API
        session's identity.
      operationId: patchCurrentIdentityAuthenticator
      requestBody:
        description: An authenticator patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authenticatorPatchWithCurrent'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: authenticator
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /current-identity/authenticators/{id}/extend:
    post:
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      summary: Allows the current identity to recieve a new certificate associated
        with a certificate based authenticator
      description: |-
        This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.
        Allows an identity to extend its certificate's expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.
        The response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.
        After verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.
      operationId: extendCurrentIdentityAuthenticator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityExtendEnrollmentRequest'
        required: true
      responses:
        "200":
          description: A response containg the identity's new certificate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityExtendEnrollmentEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: extend
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /current-identity/authenticators/{id}/extend-verify:
    post:
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      summary: Allows the current identity to validate reciept of a new client certificate
      description: |-
        After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.
        After receipt, the new client certificate must be used for new authentication requests.
      operationId: extendVerifyCurrentIdentityAuthenticator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityExtendValidateEnrollmentRequest'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: extend
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /current-identity/mfa:
    get:
      tags:
      - Current Identity
      - MFA
      summary: Returns the current status of MFA enrollment
      description: |
        Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.
      operationId: detailMfa
      responses:
        "200":
          description: The details of an MFA enrollment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailMfaEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Current Identity
      - MFA
      summary: Initiate MFA enrollment
      description: |
        Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`
      operationId: enrollMfa
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The identity is already enrolled in MFA
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  causeMessage: ""
                  code: ALREADY_MFA_ENROLLED
                  message: The identity is already enrolled in MFA
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    delete:
      tags:
      - Current Identity
      - MFA
      summary: Disable MFA for the current identity
      description: |
        Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.
      operationId: deleteMfa
      parameters:
      - name: mfa-validation-code
        in: header
        schema:
          type: string
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-identity/mfa/qr-code:
    get:
      tags:
      - Current Identity
      - MFA
      summary: Show a QR code for unverified MFA enrollments
      description: |
        Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.
      operationId: detailMfaQrCode
      responses:
        "200":
          description: OK
          content: {}
        "404":
          description: No MFA enrollment or MFA enrollment is completed
          content: {}
      security:
      - ztSession: []
      - oauth2:
        - openid
  /current-identity/mfa/recovery-codes:
    get:
      tags:
      - Current Identity
      - MFA
      summary: For a completed MFA enrollment view the current recovery codes
      description: |
        Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.
      operationId: detailMfaRecoveryCodes
      parameters:
      - name: mfa-validation-code
        in: header
        schema:
          type: string
      requestBody:
        description: An MFA validation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfaCode'
        required: false
      responses:
        "200":
          description: The recovery codes of an MFA enrollment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailMfaRecoveryCodesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: mfaValidation
    post:
      tags:
      - Current Identity
      - MFA
      summary: For a completed MFA enrollment regenerate the recovery codes
      description: |
        Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.
      operationId: createMfaRecoveryCodes
      requestBody:
        description: An MFA validation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfaCode'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: mfaValidation
  /current-identity/mfa/verify:
    post:
      tags:
      - Current Identity
      - MFA
      summary: Complete MFA enrollment by verifying a time based one time token
      description: |
        Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.
      operationId: verifyMfa
      requestBody:
        description: An MFA validation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mfaCode'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: mfaValidation
  /database/check-data-integrity:
    post:
      tags:
      - Database
      summary: Starts a data integrity scan on the datastore
      description: "Starts a data integrity scan on the datastore. Requires admin\
        \ access. Only once instance may run at a time, including runs of fixDataIntegrity."
      operationId: checkDataIntegrity
      responses:
        "202":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /database/data-integrity-results:
    get:
      tags:
      - Database
      summary: Returns any results found from in-progress integrity checks
      description: Returns any results found from in-progress integrity checks. Requires
        admin access.
      operationId: dataIntegrityResults
      responses:
        "200":
          description: A list of data integrity issues found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataIntegrityCheckResultEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /database/fix-data-integrity:
    post:
      tags:
      - Database
      summary: "Runs a data integrity scan on the datastore, attempts to fix any issues\
        \ it can and returns any found issues"
      description: "Runs a data integrity scan on the datastore, attempts to fix any\
        \ issues it can, and returns any found issues. Requires admin access. Only\
        \ once instance may run at a time, including runs of checkDataIntegrity."
      operationId: fixDataIntegrity
      responses:
        "202":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /database/snapshot:
    post:
      tags:
      - Database
      summary: Create a new database snapshot
      description: Create a new database snapshot. Requires admin access.
      operationId: createDatabaseSnapshot
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /edge-router-policies:
    get:
      tags:
      - Edge Router Policy
      summary: List edge router policies
      description: |
        Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of edge router policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRouterPoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Edge Router Policy
      summary: Create an edge router policy resource
      description: Create an edge router policy resource. Requires admin access.
      operationId: createEdgeRouterPolicy
      requestBody:
        description: An edge router policy to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterPolicyCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
  /edge-router-policies/{id}:
    get:
      tags:
      - Edge Router Policy
      summary: Retrieves a single edge router policy
      description: Retrieves a single edge router policy by id. Requires admin access.
      operationId: detailEdgeRouterPolicy
      responses:
        "200":
          description: A single edge router policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailEdgeRouterPolicyEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Edge Router Policy
      summary: Update all fields on an edge router policy
      description: Update all fields on an edge router policy by id. Requires admin
        access.
      operationId: updateEdgeRouterPolicy
      requestBody:
        description: An edge router policy update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterPolicyUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    delete:
      tags:
      - Edge Router Policy
      summary: Delete an edge router policy
      description: Delete an edge router policy by id. Requires admin access.
      operationId: deleteEdgeRouterPolicy
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Edge Router Policy
      summary: Update the supplied fields on an edge router policy
      description: Update the supplied fields on an edge router policy. Requires admin
        access.
      operationId: patchEdgeRouterPolicy
      requestBody:
        description: An edge router policy patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterPolicyPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-router-policies/{id}/edge-routers:
    get:
      tags:
      - Edge Router Policy
      summary: List edge routers a policy affects
      description: |
        Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicyEdgeRouters
      responses:
        "200":
          description: A list of edge routers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRoutersEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-router-policies/{id}/identities:
    get:
      tags:
      - Edge Router Policy
      summary: List identities an edge router policy affects
      description: |
        Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicyIdentities
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentitiesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-router-role-attributes:
    get:
      tags:
      - Role Attributes
      summary: List role attributes in use by edge routers
      description: |
        Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterRoleAttributes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of role attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoleAttributesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /edge-routers:
    get:
      tags:
      - Edge Router
      summary: List edge routers
      description: |
        Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouters
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: roleFilter
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: roleSemantic
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of edge routers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRoutersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Edge Router
      summary: Create an edge router
      description: Create a edge router resource. Requires admin access.
      operationId: createEdgeRouter
      requestBody:
        description: A edge router to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: edgeRouter
  /edge-routers/{id}:
    get:
      tags:
      - Edge Router
      summary: Retrieves a single edge router
      description: Retrieves a single edge router by id. Requires admin access.
      operationId: detailEdgeRouter
      responses:
        "200":
          description: A singular edge router resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailedEdgeRouterEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Edge Router
      summary: Update all fields on an edge router
      description: Update all fields on an edge router by id. Requires admin access.
      operationId: updateEdgeRouter
      requestBody:
        description: An edge router update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: edgeRouter
    delete:
      tags:
      - Edge Router
      summary: Delete an edge router
      description: Delete an edge router by id. Requires admin access.
      operationId: deleteEdgeRouter
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Edge Router
      summary: Update the supplied fields on an edge router
      description: Update the supplied fields on an edge router. Requires admin access.
      operationId: patchEdgeRouter
      requestBody:
        description: An edge router patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/edgeRouterPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: edgeRouter
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-routers/{id}/edge-router-policies:
    get:
      tags:
      - Edge Router
      summary: List the edge router policies that affect an edge router
      description: Retrieves a list of edge router policies that apply to the specified
        edge router.
      operationId: listEdgeRouterEdgeRouterPolicies
      responses:
        "200":
          description: A list of edge router policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRouterPoliciesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-routers/{id}/identities:
    get:
      tags:
      - Edge Router
      summary: List associated identities
      description: |
        Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterIdentities
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentitiesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-routers/{id}/re-enroll:
    post:
      tags:
      - Edge Router
      summary: Re-enroll an edge router
      description: |
        Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.
        The router retains all other properties and associations. If the router is currently connected, it will be disconnected and any
        attemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.

        If the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to
        complete the enrollment process.
      operationId: reEnrollEdgeRouter
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-routers/{id}/service-edge-router-policies:
    get:
      tags:
      - Edge Router
      summary: List the service policies that affect an edge router
      description: Retrieves a list of service policies policies that apply to the
        specified edge router.
      operationId: listEdgeRouterServiceEdgeRouterPolicies
      responses:
        "200":
          description: A list of service policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicePoliciesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /edge-routers/{id}/services:
    get:
      tags:
      - Edge Router
      summary: List associated services
      description: |
        Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterServices
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /enrollments:
    get:
      tags:
      - Enrollment
      summary: List outstanding enrollments
      description: |
        Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEnrollments
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of enrollments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEnrollmentsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Enrollment
      summary: Create an outstanding enrollment for an identity
      description: "Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity.\
        \ If an enrollment of the same type is already outstanding the request will\
        \ fail with a 409 conflict. If desired, an existing enrollment can be refreshed\
        \ by `enrollments/:id/refresh` or deleted."
      operationId: createEnrollment
      requestBody:
        description: An enrollment to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enrollmentCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The request could not be completed due to a conflict of configuration
            or state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: enrollment
  /enrollments/{id}:
    get:
      tags:
      - Enrollment
      summary: Retrieves an outstanding enrollment
      description: Retrieves a single outstanding enrollment by id. Requires admin
        access.
      operationId: detailEnrollment
      responses:
        "200":
          description: A singular enrollment resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailEnrollmentEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    delete:
      tags:
      - Enrollment
      summary: Delete an outstanding enrollment
      description: Delete an outstanding enrollment by id. Requires admin access.
      operationId: deleteEnrollment
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /enrollments/{id}/refresh:
    post:
      tags:
      - Enrollment
      summary: Refreshes an enrollment record's expiration window
      description: "For expired or unexpired enrollments, reset the expiration window.\
        \ A new JWT will be generated and must be used for the enrollment."
      operationId: refreshEnrollment
      requestBody:
        description: An enrollment refresh request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enrollmentRefresh'
        required: true
      responses:
        "200":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: refresh
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /enumerated-capabilities:
    get:
      tags:
      - Informational
      summary: "Returns all capabilities this version of the controller is aware of,\
        \ enabled or not."
      operationId: listEnumeratedCapabilities
      responses:
        "200":
          description: A typed and enumerated list of capabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEnumeratedCapabilitiesEnvelope'
      security: []
  /external-jwt-signers:
    get:
      tags:
      - External JWT Signer
      summary: List External JWT Signers
      description: Retrieves a list of external JWT signers for authentication
      operationId: listExternalJwtSigners
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of External JWT Signers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listExternalJwtSignersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - External JWT Signer
      summary: Creates an External JWT Signer
      description: Creates an External JWT Signer. Requires admin access.
      operationId: createExternalJwtSigner
      requestBody:
        description: An External JWT Signer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalJwtSignerCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: externalJwtSigner
  /external-jwt-signers/{id}:
    get:
      tags:
      - External JWT Signer
      summary: Retrieves a single External JWT Signer
      description: Retrieves a single External JWT Signer by id. Requires admin access.
      operationId: detailExternalJwtSigner
      responses:
        "200":
          description: A singular External JWT Signer resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailExternalJwtSignerEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - External JWT Signer
      summary: Update all fields on an External JWT Signer
      description: Update all fields on an External JWT Signer by id. Requires admin
        access.
      operationId: updateExternalJwtSigner
      requestBody:
        description: An External JWT Signer update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalJwtSignerUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: externalJwtSigner
    delete:
      tags:
      - External JWT Signer
      summary: Delete an External JWT Signer
      description: |
        Delete an External JWT Signer by id. Requires admin access.
      operationId: deleteExternalJwtSigner
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - External JWT Signer
      summary: Update the supplied fields on an External JWT Signer
      description: Update only the supplied fields on an External JWT Signer by id.
        Requires admin access.
      operationId: patchExternalJwtSigner
      requestBody:
        description: An External JWT Signer patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalJwtSignerPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: externalJwtSigner
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities:
    get:
      tags:
      - Identity
      summary: List identities
      description: |
        Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentities
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: roleFilter
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: roleSemantic
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentitiesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Identity
      summary: Create an identity resource
      description: Create an identity resource. Requires admin access.
      operationId: createIdentity
      requestBody:
        description: An identity to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: identity
  /identities/{id}:
    get:
      tags:
      - Identity
      summary: Retrieves a single identity
      description: Retrieves a single identity by id. Requires admin access.
      operationId: detailIdentity
      responses:
        "200":
          description: A single identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailIdentityEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Identity
      summary: Update all fields on an identity
      description: Update all fields on an identity by id. Requires admin access.
      operationId: updateIdentity
      requestBody:
        description: An identity update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: identity
    delete:
      tags:
      - Identity
      summary: Delete an identity
      description: Delete an identity by id. Requires admin access.
      operationId: deleteIdentity
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Identity
      summary: Update the supplied fields on an identity
      description: Update the supplied fields on an identity. Requires admin access.
      operationId: patchIdentity
      requestBody:
        description: An identity patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: identity
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/authenticators:
    get:
      tags:
      - Identity
      summary: Retrieve the current authenticators of a specific identity
      description: |
        Returns a list of authenticators associated to the identity specified
      operationId: getIdentityAuthenticators
      responses:
        "200":
          description: A list of authenticators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAuthenticatorsEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/disable:
    post:
      tags:
      - Identity
      summary: Set an identity as disabled
      description: |
        Reject an identity's API session requests for N minutes or indefinitely if 0.
      operationId: disableIdentity
      requestBody:
        description: Disable parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/disableParams'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: disable
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/edge-router-policies:
    get:
      tags:
      - Identity
      summary: List the edge router policies that affect an identity
      description: Retrieves a list of edge router policies that apply to the specified
        identity.
      operationId: listIdentitysEdgeRouterPolicies
      responses:
        "200":
          description: A list of edge router policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRouterPoliciesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/edge-routers:
    get:
      tags:
      - Identity
      summary: List accessible edge-routers
      description: |
        Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityEdgeRouters
      responses:
        "200":
          description: A list of edge routers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRoutersEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/enable:
    post:
      tags:
      - Identity
      summary: Clears all disabled state from an identity
      description: |
        Allows an admin to remove disabled statuses from an identity.
      operationId: enableIdentity
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/enrollments:
    get:
      tags:
      - Identity
      summary: Retrieve the current enrollments of a specific identity
      description: |
        Returns a list of enrollments associated to the identity specified
      operationId: getIdentityEnrollments
      responses:
        "200":
          description: A list of enrollments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEnrollmentsEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/failed-service-requests:
    get:
      tags:
      - Identity
      summary: Retrieve a list of the most recent service failure requests due to
        posture checks
      description: |
        Returns a list of service session requests that failed due to posture checks. The entries will contain
        every policy that was verified against and every failed check in each policy. Each check will include
        the historical posture data and posture check configuration.
      operationId: getIdentityFailedServiceRequests
      responses:
        "200":
          description: Returns a list of service request failures
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/failedServiceRequestEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/mfa:
    delete:
      tags:
      - Identity
      - MFA
      summary: Remove MFA from an identitity
      description: |
        Allows an admin to remove MFA enrollment from a specific identity. Requires admin.
      operationId: removeIdentityMfa
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/policy-advice/{serviceId}:
    get:
      tags:
      - Identity
      summary: Analyze policies relating the given identity and service
      description: |
        Analyzes policies to see if the given identity should be able to dial or bind the given service. |
        Will check services policies to see if the identity can access the service. Will check edge router policies |
        to check if the identity and service have access to common edge routers so that a connnection can be made. |
        Will also check if at least one edge router is on-line. Requires admin access.
      operationId: getIdentityPolicyAdvice
      responses:
        "200":
          description: Returns the document that represents the policy advice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getIdentityPolicyAdviceEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
    - name: serviceId
      in: path
      description: The id of a service
      required: true
      schema:
        type: string
  /identities/{id}/posture-data:
    get:
      tags:
      - Identity
      summary: Retrieve the curent posture data for a specific identity.
      description: |
        Returns a nested map data represeting the posture data of the identity.
        This data should be considered volatile.
      operationId: getIdentityPostureData
      responses:
        "200":
          description: Returns the document that represents posture data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postureDataEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/service-configs:
    get:
      tags:
      - Identity
      summary: List the service configs associated a specific identity
      description: Retrieves a list of service configs associated to a specific identity
      operationId: listIdentitysServiceConfigs
      responses:
        "200":
          description: A list of service configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServiceConfigsEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Identity
      summary: Associate service configs for a specific identity
      description: Associate service configs to a specific identity
      operationId: associateIdentitysServiceConfigs
      requestBody:
        description: A service config patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceConfigsAssignList'
        required: true
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: serviceConfigs
    delete:
      tags:
      - Identity
      summary: Remove associated service configs from a specific identity
      description: Remove service configs from a specific identity
      operationId: disassociateIdentitysServiceConfigs
      requestBody:
        description: An array of service and config id pairs to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceConfigsAssignList'
        required: false
      responses:
        "200":
          description: Base empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: serviceConfigIdPairs
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/service-policies:
    get:
      tags:
      - Identity
      summary: List the service policies that affect an identity
      description: Retrieves a list of service policies that apply to the specified
        identity.
      operationId: listIdentityServicePolicies
      responses:
        "200":
          description: A list of service policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicePoliciesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/services:
    get:
      tags:
      - Identity
      summary: List accessible services
      description: |
        Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityServices
      parameters:
      - name: filter
        in: query
        schema:
          type: string
      - name: policyType
        in: query
        schema:
          type: string
          enum:
          - dial
          - bind
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identities/{id}/trace:
    put:
      tags:
      - Identity
      - Tracing
      summary: Enable/disable data flow tracing for an identity
      description: |
        Allows an admin to enable/disable data flow tracing for an identity
      operationId: updateIdentityTracing
      requestBody:
        description: A traceSpec object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/traceSpec'
        required: true
      responses:
        "200":
          description: Returns the document that represents the trace state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/traceDetailEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: traceSpec
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /identity-role-attributes:
    get:
      tags:
      - Role Attributes
      summary: List role attributes in use by identities
      description: |
        Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityRoleAttributes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of role attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoleAttributesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /identity-types:
    get:
      tags:
      - Identity
      summary: List available identity types
      description: |
        Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityTypes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of identity types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentityTypesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /identity-types/{id}:
    get:
      tags:
      - Identity
      summary: Retrieves a identity type
      description: Retrieves a single identity type by id. Requires admin access.
      operationId: detailIdentityType
      responses:
        "200":
          description: A single identity type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailIdentityTypeEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /posture-check-role-attributes:
    get:
      tags:
      - Role Attributes
      summary: List role attributes in use by posture checks
      description: |
        Retrieves a list of role attributes in use by posture checks; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listPostureCheckRoleAttributes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of role attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoleAttributesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /posture-check-types:
    get:
      tags:
      - Posture Checks
      summary: List a subset of posture check types
      description: |
        Retrieves a list of posture check types
      operationId: listPostureCheckTypes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of posture check types
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/listPostureCheckTypesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /posture-check-types/{id}:
    get:
      tags:
      - Posture Checks
      summary: Retrieves a single posture check type
      description: Retrieves a single posture check type by id
      operationId: detailPostureCheckType
      responses:
        "200":
          description: Retrieves a singular posture check type by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailPostureCheckTypeEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /posture-checks:
    get:
      tags:
      - Posture Checks
      summary: List a subset of posture checks
      description: |
        Retrieves a list of posture checks
      operationId: listPostureChecks
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: roleFilter
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: roleSemantic
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of posture checks
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/listPostureCheckEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Posture Checks
      summary: Creates a Posture Checks
      description: Creates a Posture Checks
      operationId: createPostureCheck
      requestBody:
        description: A Posture Check to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postureCheckCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: postureCheck
  /posture-checks/{id}:
    get:
      tags:
      - Posture Checks
      summary: Retrieves a single Posture Checks
      description: Retrieves a single Posture Checks by id
      operationId: detailPostureCheck
      responses:
        "200":
          description: Retrieves a singular posture check by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailPostureCheckEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Posture Checks
      summary: Update all fields on a Posture Checks
      description: Update all fields on a Posture Checks by id
      operationId: updatePostureCheck
      requestBody:
        description: A Posture Check update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postureCheckUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: postureCheck
    delete:
      tags:
      - Posture Checks
      summary: Deletes an Posture Checks
      description: Deletes and Posture Checks by id
      operationId: deletePostureCheck
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "403":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Posture Checks
      summary: Update the supplied fields on a Posture Checks
      description: Update only the supplied fields on a Posture Checks by id
      operationId: patchPostureCheck
      requestBody:
        description: A Posture Check patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postureCheckPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: postureCheck
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /routers:
    get:
      tags:
      - Router
      summary: List routers
      description: |
        Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listRouters
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoutersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Router
      summary: Create a router resource
      description: Create a router resource. Requires admin access.
      operationId: createRouter
      requestBody:
        description: A router to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
  /routers/{id}:
    get:
      tags:
      - Router
      summary: Retrieves a single router
      description: Retrieves a single router by id. Requires admin access.
      operationId: detailRouter
      responses:
        "200":
          description: A single router
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailRouterEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Router
      summary: Update all fields on a router
      description: Update all fields on a router by id. Requires admin access.
      operationId: updateRouter
      requestBody:
        description: A router update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
    delete:
      tags:
      - Router
      summary: Delete a router
      description: Delete a router by id. Requires admin access.
      operationId: deleteRouter
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Router
      summary: Update the supplied fields on a router
      description: Update the supplied fields on a router. Requires admin access.
      operationId: patchRouter
      requestBody:
        description: A router patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-edge-router-policies:
    get:
      tags:
      - Service Edge Router Policy
      summary: List service edge router policies
      description: |
        Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceEdgeRouterPolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of service edge router policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServiceEdgeRouterPoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Service Edge Router Policy
      summary: Create a service edge router policy resource
      description: Create a service edge router policy resource. Requires admin access.
      operationId: createServiceEdgeRouterPolicy
      requestBody:
        description: A service edge router policy to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceEdgeRouterPolicyCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
  /service-edge-router-policies/{id}:
    get:
      tags:
      - Service Edge Router Policy
      summary: Retrieves a single service edge policy
      description: Retrieves a single service edge policy by id. Requires admin access.
      operationId: detailServiceEdgeRouterPolicy
      responses:
        "200":
          description: A single service edge router policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailServiceEdgePolicyEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Service Edge Router Policy
      summary: Update all fields on a service edge policy
      description: Update all fields on a service edge policy by id. Requires admin
        access.
      operationId: updateServiceEdgeRouterPolicy
      requestBody:
        description: A service edge router policy update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceEdgeRouterPolicyUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    delete:
      tags:
      - Service Edge Router Policy
      summary: Delete a service edge policy
      description: Delete a service edge policy by id. Requires admin access.
      operationId: deleteServiceEdgeRouterPolicy
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Service Edge Router Policy
      summary: Update the supplied fields on a service edge policy
      description: Update the supplied fields on a service edge policy. Requires admin
        access.
      operationId: patchServiceEdgeRouterPolicy
      requestBody:
        description: A service edge router policy patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceEdgeRouterPolicyPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-edge-router-policies/{id}/edge-routers:
    get:
      tags:
      - Service Edge Router Policy
      summary: List the edge routers that a service edge router policy applies to
      description: List the edge routers that a service edge router policy applies
        to
      operationId: listServiceEdgeRouterPolicyEdgeRouters
      responses:
        "200":
          description: A list of edge routers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRoutersEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-edge-router-policies/{id}/services:
    get:
      tags:
      - Service Edge Router Policy
      summary: List the services that a service edge router policy applies to
      description: List the services that a service edge router policy applies to
      operationId: listServiceEdgeRouterPolicyServices
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-policies:
    get:
      tags:
      - Service Policy
      summary: List service policies
      description: |
        Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of service policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicePoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Service Policy
      summary: Create a service policy resource
      description: Create a service policy resource. Requires admin access.
      operationId: createServicePolicy
      requestBody:
        description: A service policy to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePolicyCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
  /service-policies/{id}:
    get:
      tags:
      - Service Policy
      summary: Retrieves a single service policy
      description: Retrieves a single service policy by id. Requires admin access.
      operationId: detailServicePolicy
      responses:
        "200":
          description: A single service policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailServicePolicyEnvelop'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Service Policy
      summary: Update all fields on a service policy
      description: Update all fields on a service policy by id. Requires admin access.
      operationId: updateServicePolicy
      requestBody:
        description: A service policy update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePolicyUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    delete:
      tags:
      - Service Policy
      summary: Delete a service policy
      description: Delete a service policy by id. Requires admin access.
      operationId: deleteServicePolicy
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Service Policy
      summary: Update the supplied fields on a service policy
      description: Update the supplied fields on a service policy. Requires admin
        access.
      operationId: patchServicePolicy
      requestBody:
        description: A service policy patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePolicyPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: policy
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-policies/{id}/identities:
    get:
      tags:
      - Service Policy
      summary: List identities a service policy affects
      description: |
        Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyIdentities
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentitiesEnvelope'
        "400":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-policies/{id}/posture-checks:
    get:
      tags:
      - Service Policy
      summary: List posture check a service policy includes
      description: |
        Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyPostureChecks
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of posture checks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPostureCheckEnvelope'
        "400":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-policies/{id}/services:
    get:
      tags:
      - Service Policy
      summary: List services a service policy affects
      description: |
        Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyServices
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "400":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /service-role-attributes:
    get:
      tags:
      - Role Attributes
      summary: List role attributes in use by services
      description: |
        Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceRoleAttributes
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of role attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoleAttributesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /services:
    get:
      tags:
      - Service
      summary: List services
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServices
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: configTypes
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: roleFilter
        in: query
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: roleSemantic
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Service
      summary: Create a services resource
      description: Create a services resource. Requires admin access.
      operationId: createService
      requestBody:
        description: A service to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
  /services/{id}:
    get:
      tags:
      - Service
      summary: Retrieves a single service
      description: Retrieves a single service by id. Requires admin access.
      operationId: detailService
      responses:
        "200":
          description: A single service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailServiceEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Service
      summary: Update all fields on a service
      description: Update all fields on a service by id. Requires admin access.
      operationId: updateService
      requestBody:
        description: A service update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/serviceUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
    delete:
      tags:
      - Service
      summary: Delete a service
      description: Delete a service by id. Requires admin access.
      operationId: deleteService
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Service
      summary: Update the supplied fields on a service
      description: Update the supplied fields on a service. Requires admin access.
      operationId: patchService
      requestBody:
        description: A service patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/servicePatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: service
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/configs:
    get:
      tags:
      - Service
      summary: List configs associated to a specific service
      description: |
        Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceConfig
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listConfigsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/edge-routers:
    get:
      tags:
      - Service
      summary: List accessible edge-routers
      description: |
        Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceEdgeRouters
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of edge routers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEdgeRoutersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/identities:
    get:
      tags:
      - Service
      summary: List identities with access
      description: |
        Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceIdentities
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      - name: policyType
        in: query
        schema:
          type: string
          enum:
          - dial
          - bind
      responses:
        "200":
          description: A list of identities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIdentitiesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/service-edge-router-policies:
    get:
      tags:
      - Service
      summary: List service edge router policies that affect a specific service
      description: |
        Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServiceEdgeRouterPolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of service edge router policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServiceEdgeRouterPoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/service-policies:
    get:
      tags:
      - Service
      summary: List service policies that affect a specific service
      description: |
        Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServicePolicies
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of service policies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listServicePoliciesEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /services/{id}/terminators:
    get:
      tags:
      - Service
      summary: List of terminators assigned to a service
      description: |
        Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.
      operationId: listServiceTerminators
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of terminators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTerminatorsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /sessions:
    get:
      tags:
      - Session
      summary: List sessions
      description: |
        Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.

        Sessions are tied to an API session and are moved when an API session times out or logs out. Active sessions
        (i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.
      operationId: listSessions
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of sessions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSessionsManagementEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /sessions/{id}:
    get:
      tags:
      - Session
      summary: Retrieves a single session
      description: Retrieves a single session by id. Requires admin access.
      operationId: detailSession
      responses:
        "200":
          description: A single session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailSessionManagementEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    delete:
      tags:
      - Session
      summary: Delete a session
      description: Delete a session by id. Requires admin access.
      operationId: deleteSession
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /sessions/{id}/route-path:
    get:
      tags:
      - Session
      summary: Retrieves a single session's router path
      description: Retrieves a single session's route path by id. Requires admin access.
      operationId: detailSessionRoutePath
      responses:
        "200":
          description: A single session's route path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailSessionRoutePathEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /specs:
    get:
      tags:
      - Informational
      summary: Returns a list of API specs
      description: Returns a list of spec files embedded within the controller for
        consumption/documentation/code geneartion
      operationId: listSpecs
      responses:
        "200":
          description: A list of specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSpecsEnvelope'
      security: []
  /specs/{id}:
    get:
      tags:
      - Informational
      summary: Return a single spec resource
      description: Returns single spec resource embedded within the controller for
        consumption/documentation/code geneartion
      operationId: detailSpec
      responses:
        "200":
          description: A single specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailSpecEnvelope'
      security: []
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /specs/{id}/spec:
    get:
      tags:
      - Informational
      summary: Returns the spec's file
      description: "Return the body of the specification (i.e. Swagger, OpenAPI 2.0,\
        \ 3.0, etc)."
      operationId: detailSpecBody
      responses:
        "200":
          description: Returns the document that represents the specification
          content:
            text/yaml:
              schema:
                $ref: '#/components/schemas/detailSpecBodyEnvelope'
            application/json:
              schema:
                $ref: '#/components/schemas/detailSpecBodyEnvelope'
      security: []
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /summary:
    get:
      tags:
      - Informational
      summary: Returns a list of accessible resource counts
      description: This endpoint is usefull for UIs that wish to display UI elements
        with counts.
      operationId: listSummary
      responses:
        "200":
          description: Entity counts scopped to the current identitie's access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSummaryCountsEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
  /terminators:
    get:
      tags:
      - Terminator
      summary: List terminators
      description: |
        Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listTerminators
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of terminators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTerminatorsEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Terminator
      summary: Create a terminator resource
      description: Create a terminator resource. Requires admin access.
      operationId: createTerminator
      requestBody:
        description: A terminator to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminatorCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: terminator
  /terminators/{id}:
    get:
      tags:
      - Terminator
      summary: Retrieves a single terminator
      description: Retrieves a single terminator by id. Requires admin access.
      operationId: detailTerminator
      responses:
        "200":
          description: A single terminator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailTerminatorEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Terminator
      summary: Update all fields on a terminator
      description: Update all fields on a terminator by id. Requires admin access.
      operationId: updateTerminator
      requestBody:
        description: A terminator update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminatorUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: terminator
    delete:
      tags:
      - Terminator
      summary: Delete a terminator
      description: Delete a terminator by id. Requires admin access.
      operationId: deleteTerminator
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Terminator
      summary: Update the supplied fields on a terminator
      description: Update the supplied fields on a terminator. Requires admin access.
      operationId: patchTerminator
      requestBody:
        description: A terminator patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminatorPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: terminator
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /transit-routers:
    get:
      tags:
      - Router
      summary: List routers
      description: |
        Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listTransitRouters
      parameters:
      - name: limit
        in: query
        schema:
          type: integer
      - name: offset
        in: query
        schema:
          type: integer
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: A list of specifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRoutersEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    post:
      tags:
      - Router
      summary: Create a router resource
      description: Create a router resource. Requires admin access.
      operationId: createTransitRouter
      requestBody:
        description: A router to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerCreate'
        required: true
      responses:
        "201":
          description: The create request was successful and the resource has been
            added at the following location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createEnvelope'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
  /transit-routers/{id}:
    get:
      tags:
      - Router
      summary: Retrieves a single router
      description: Retrieves a single router by id. Requires admin access.
      operationId: detailTransitRouter
      responses:
        "200":
          description: A single router
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailRouterEnvelope'
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    put:
      tags:
      - Router
      summary: Update all fields on a router
      description: Update all fields on a router by id. Requires admin access.
      operationId: updateTransitRouter
      requestBody:
        description: A router update object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerUpdate'
        required: true
      responses:
        "200":
          description: The update request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
    delete:
      tags:
      - Router
      summary: Delete a router
      description: Delete a router by id. Requires admin access.
      operationId: deleteTransitRouter
      responses:
        "200":
          description: The delete request was successful and the resource has been
            removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "409":
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
    patch:
      tags:
      - Router
      summary: Update the supplied fields on a router
      description: Update the supplied fields on a router. Requires admin access.
      operationId: patchTransitRouter
      requestBody:
        description: A router patch object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/routerPatch'
        required: true
      responses:
        "200":
          description: The patch request was successful and the resource has been
            altered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty'
        "400":
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "401":
          description: The supplied session does not have the correct access rights
            to request this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "404":
          description: The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
        "429":
          description: The resource requested is rate limited and the rate limit has
            been exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiErrorEnvelope'
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
      security:
      - ztSession: []
      - oauth2:
        - openid
      x-codegen-request-body-name: router
    parameters:
    - name: id
      in: path
      description: The id of the requested resource
      required: true
      schema:
        type: string
  /version:
    get:
      tags:
      - Informational
      summary: Returns version information
      operationId: listVersion
      responses:
        "200":
          description: Version information for the controller
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listVersionEnvelope'
      security: []
components:
  schemas:
    apiAddress:
      type: object
      properties:
        url:
          type: string
        version:
          type: string
    apiAddressArray:
      type: array
      items:
        $ref: '#/components/schemas/apiAddress'
    apiAddressList:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/apiAddressArray'
    apiError:
      type: object
      properties:
        args:
          $ref: '#/components/schemas/apiErrorArgs'
        cause:
          $ref: '#/components/schemas/apiErrorCause'
        causeMessage:
          type: string
        code:
          type: string
        data:
          type: object
          additionalProperties: true
        message:
          type: string
        requestId:
          type: string
    apiErrorArgs:
      type: object
      properties:
        urlVars:
          type: object
          additionalProperties:
            type: string
    apiErrorCause:
      allOf:
      - $ref: '#/components/schemas/apiFieldError'
      - $ref: '#/components/schemas/apiError'
    apiErrorEnvelope:
      required:
      - error
      - meta
      type: object
      properties:
        error:
          $ref: '#/components/schemas/apiError'
        meta:
          $ref: '#/components/schemas/meta'
    apiFieldError:
      type: object
      properties:
        field:
          type: string
        reason:
          type: string
        value:
          type: object
          description: "can be any value - string, number, boolean, array or object"
    apiSessionDetail:
      description: An API Session object
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - authQueries
        - authenticatorId
        - configTypes
        - identity
        - identityId
        - ipAddress
        - isCertExtendable
        - isMfaComplete
        - isMfaRequired
        - token
        type: object
        properties:
          authQueries:
            $ref: '#/components/schemas/authQueryList'
          authenticatorId:
            type: string
          cachedLastActivityAt:
            type: string
            format: date-time
          configTypes:
            type: array
            items:
              type: string
          identity:
            $ref: '#/components/schemas/entityRef'
          identityId:
            type: string
          ipAddress:
            type: string
          isCertExtendable:
            type: boolean
          isMfaComplete:
            type: boolean
          isMfaRequired:
            type: boolean
          lastActivityAt:
            type: string
            format: date-time
          token:
            type: string
    apiSessionList:
      type: array
      items:
        $ref: '#/components/schemas/apiSessionDetail'
    apiSessionPostureData:
      required:
      - mfa
      type: object
      properties:
        endpointState:
          $ref: '#/components/schemas/postureDataEndpointState'
        mfa:
          $ref: '#/components/schemas/postureDataMfa'
        sdkInfo:
          $ref: '#/components/schemas/sdkInfo'
    apiVersion:
      required:
      - path
      type: object
      properties:
        apiBaseUrls:
          type: array
          items:
            type: string
        path:
          type: string
        version:
          type: string
    attributes:
      type: array
      description: A set of strings used to loosly couple this resource to policies
      nullable: true
      items:
        type: string
      x-nullable: true
      x-omitempty: true
    authPolicyCreate:
      required:
      - name
      - primary
      - secondary
      type: object
      properties:
        name:
          type: string
        primary:
          $ref: '#/components/schemas/authPolicyPrimary'
        secondary:
          $ref: '#/components/schemas/authPolicySecondary'
        tags:
          $ref: '#/components/schemas/tags'
      description: A Auth Policy resource
    authPolicyDetail:
      description: A Auth Policy resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - name
        - primary
        - secondary
        type: object
        properties:
          name:
            type: string
          primary:
            $ref: '#/components/schemas/authPolicyPrimary'
          secondary:
            $ref: '#/components/schemas/authPolicySecondary'
    authPolicyList:
      type: array
      description: An array of Auth Policies resources
      items:
        $ref: '#/components/schemas/authPolicyDetail'
    authPolicyPatch:
      type: object
      properties:
        name:
          type: string
          nullable: true
        primary:
          $ref: '#/components/schemas/authPolicyPrimaryPatch'
        secondary:
          $ref: '#/components/schemas/authPolicySecondaryPatch'
        tags:
          $ref: '#/components/schemas/tags'
      description: A Auth Policy resource
    authPolicyPrimary:
      required:
      - cert
      - extJwt
      - updb
      type: object
      properties:
        cert:
          $ref: '#/components/schemas/authPolicyPrimaryCert'
        extJwt:
          $ref: '#/components/schemas/authPolicyPrimaryExtJwt'
        updb:
          $ref: '#/components/schemas/authPolicyPrimaryUpdb'
    authPolicyPrimaryCert:
      required:
      - allowExpiredCerts
      - allowed
      type: object
      properties:
        allowExpiredCerts:
          type: boolean
        allowed:
          type: boolean
    authPolicyPrimaryCertPatch:
      type: object
      properties:
        allowExpiredCerts:
          type: boolean
          nullable: true
        allowed:
          type: boolean
          nullable: true
      nullable: true
      x-nullable: true
    authPolicyPrimaryExtJwt:
      required:
      - allowed
      - allowedSigners
      type: object
      properties:
        allowed:
          type: boolean
        allowedSigners:
          type: array
          items:
            type: string
    authPolicyPrimaryExtJwtPatch:
      type: object
      properties:
        allowed:
          type: boolean
          nullable: true
        allowedSigners:
          type: array
          nullable: true
          items:
            type: string
      nullable: true
      x-nullable: true
    authPolicyPrimaryPatch:
      type: object
      properties:
        cert:
          $ref: '#/components/schemas/authPolicyPrimaryCertPatch'
        extJwt:
          $ref: '#/components/schemas/authPolicyPrimaryExtJwtPatch'
        updb:
          $ref: '#/components/schemas/authPolicyPrimaryUpdbPatch'
    authPolicyPrimaryUpdb:
      required:
      - allowed
      - lockoutDurationMinutes
      - maxAttempts
      - minPasswordLength
      - requireMixedCase
      - requireNumberChar
      - requireSpecialChar
      type: object
      properties:
        allowed:
          type: boolean
        lockoutDurationMinutes:
          type: integer
        maxAttempts:
          type: integer
        minPasswordLength:
          type: integer
        requireMixedCase:
          type: boolean
        requireNumberChar:
          type: boolean
        requireSpecialChar:
          type: boolean
    authPolicyPrimaryUpdbPatch:
      type: object
      properties:
        allowed:
          type: boolean
          nullable: true
        lockoutDurationMinutes:
          type: integer
          nullable: true
        maxAttempts:
          type: integer
          nullable: true
        minPasswordLength:
          type: integer
          nullable: true
        requireMixedCase:
          type: boolean
          nullable: true
        requireNumberChar:
          type: boolean
          nullable: true
        requireSpecialChar:
          type: boolean
          nullable: true
      nullable: true
      x-nullable: true
    authPolicySecondary:
      required:
      - requireTotp
      type: object
      properties:
        requireExtJwtSigner:
          type: string
          nullable: true
          x-omit-empty: false
        requireTotp:
          type: boolean
    authPolicySecondaryPatch:
      type: object
      properties:
        requireExtJwtSigner:
          type: string
          nullable: true
        requireTotp:
          type: boolean
          nullable: true
      nullable: true
      x-nullable: true
    authPolicyUpdate:
      $ref: '#/components/schemas/authPolicyCreate'
    authQueryDetail:
      required:
      - provider
      type: object
      properties:
        format:
          $ref: '#/components/schemas/mfaFormats'
        httpMethod:
          type: string
        httpUrl:
          type: string
        maxLength:
          type: integer
        minLength:
          type: integer
        provider:
          $ref: '#/components/schemas/mfaProviders'
        typeId:
          type: string
    authQueryList:
      type: array
      items:
        $ref: '#/components/schemas/authQueryDetail'
    authenticate:
      type: object
      properties:
        configTypes:
          $ref: '#/components/schemas/configTypes'
        envInfo:
          $ref: '#/components/schemas/envInfo'
        password:
          $ref: '#/components/schemas/password'
        sdkInfo:
          $ref: '#/components/schemas/sdkInfo'
        username:
          $ref: '#/components/schemas/username'
      description: A generic authenticate object meant for use with the /authenticate
        path. Required fields depend on authentication method.
    authenticatorCreate:
      required:
      - identityId
      - method
      type: object
      properties:
        certPem:
          type: string
          description: The client certificate the identity will login with. Used only
            for method='cert'
        identityId:
          type: string
          description: The id of an existing identity that will be assigned this authenticator
        method:
          type: string
          description: The type of authenticator to create; which will dictate which
            properties on this object are required.
        password:
          type: string
          description: The password the identity will login with. Used only for method='updb'
        tags:
          $ref: '#/components/schemas/tags'
        username:
          type: string
          description: The username that the identity will login with. Used only for
            method='updb'
      description: Creates an authenticator for a specific identity which can be used
        for API authentication
    authenticatorDetail:
      description: A singular authenticator resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - identity
        - identityId
        - method
        type: object
        properties:
          certPem:
            type: string
          fingerprint:
            type: string
          identity:
            $ref: '#/components/schemas/entityRef'
          identityId:
            type: string
          isIssuedByNetwork:
            type: boolean
          method:
            type: string
          username:
            type: string
    authenticatorList:
      type: array
      description: An array of authenticator resources
      items:
        $ref: '#/components/schemas/authenticatorDetail'
    authenticatorPatch:
      type: object
      properties:
        password:
          $ref: '#/components/schemas/passwordNullable'
        tags:
          $ref: '#/components/schemas/tags'
        username:
          $ref: '#/components/schemas/usernameNullable'
      description: All of the fields on an authenticator that may be updated
    authenticatorPatchWithCurrent:
      description: All of the fields on an authenticator that may be updated
      allOf:
      - $ref: '#/components/schemas/authenticatorPatch'
      - required:
        - currentPassword
        type: object
        properties:
          currentPassword:
            $ref: '#/components/schemas/password'
    authenticatorUpdate:
      required:
      - password
      - username
      type: object
      properties:
        password:
          $ref: '#/components/schemas/password'
        tags:
          $ref: '#/components/schemas/tags'
        username:
          $ref: '#/components/schemas/username'
      description: All of the fields on an authenticator that will be updated
    authenticatorUpdateWithCurrent:
      description: All of the fields on an authenticator that will be updated
      allOf:
      - $ref: '#/components/schemas/authenticatorUpdate'
      - required:
        - currentPassword
        type: object
        properties:
          currentPassword:
            $ref: '#/components/schemas/password'
    baseEntity:
      required:
      - _links
      - createdAt
      - id
      - updatedAt
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/links'
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        tags:
          $ref: '#/components/schemas/tags'
        updatedAt:
          type: string
          format: date-time
      description: Fields shared by all Edge API entities
    caCreate:
      required:
      - certPem
      - identityRoles
      - isAuthEnabled
      - isAutoCaEnrollmentEnabled
      - isOttCaEnrollmentEnabled
      - name
      type: object
      properties:
        certPem:
          type: string
          example: |
            -----BEGIN CERTIFICATE-----
            MIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT
            AlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk
            TmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy
            NTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D
            MRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg
            RXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z
            Iaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/
            3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh
            MB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG
            uc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
            hjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms
            kllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE
            1ZG1zveyMvsYsH04C9FndE6w2MLvlA==
            -----END CERTIFICATE-----
        externalIdClaim:
          $ref: '#/components/schemas/externalIdClaim'
        identityNameFormat:
          type: string
        identityRoles:
          $ref: '#/components/schemas/roles'
        isAuthEnabled:
          type: boolean
          example: true
        isAutoCaEnrollmentEnabled:
          type: boolean
          example: true
        isOttCaEnrollmentEnabled:
          type: boolean
          example: true
        name:
          type: string
          example: Test 3rd Party External CA
        tags:
          $ref: '#/components/schemas/tags'
      description: A create Certificate Authority (CA) object
    caDetail:
      description: A Certificate Authority (CA) resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - certPem
        - fingerprint
        - identityNameFormat
        - identityRoles
        - isAuthEnabled
        - isAutoCaEnrollmentEnabled
        - isOttCaEnrollmentEnabled
        - isVerified
        - name
        type: object
        properties:
          certPem:
            type: string
          externalIdClaim:
            $ref: '#/components/schemas/externalIdClaim'
          fingerprint:
            type: string
          identityNameFormat:
            type: string
          identityRoles:
            $ref: '#/components/schemas/roles'
          isAuthEnabled:
            type: boolean
            example: true
          isAutoCaEnrollmentEnabled:
            type: boolean
            example: true
          isOttCaEnrollmentEnabled:
            type: boolean
            example: true
          isVerified:
            type: boolean
            example: false
          name:
            type: string
          verificationToken:
            type: string
            format: uuid
    caList:
      type: array
      description: An array of Certificate Authority (CA) resources
      items:
        $ref: '#/components/schemas/caDetail'
    caPatch:
      type: object
      properties:
        externalIdClaim:
          $ref: '#/components/schemas/externalIdClaimPatch'
        identityNameFormat:
          type: string
          nullable: true
        identityRoles:
          $ref: '#/components/schemas/roles'
        isAuthEnabled:
          type: boolean
          nullable: true
          example: true
        isAutoCaEnrollmentEnabled:
          type: boolean
          nullable: true
          example: true
        isOttCaEnrollmentEnabled:
          type: boolean
          nullable: true
          example: true
        name:
          type: string
          nullable: true
          example: My CA
        tags:
          $ref: '#/components/schemas/tags'
    caUpdate:
      required:
      - identityNameFormat
      - identityRoles
      - isAuthEnabled
      - isAutoCaEnrollmentEnabled
      - isOttCaEnrollmentEnabled
      - name
      type: object
      properties:
        externalIdClaim:
          $ref: '#/components/schemas/externalIdClaim'
        identityNameFormat:
          type: string
        identityRoles:
          $ref: '#/components/schemas/roles'
        isAuthEnabled:
          type: boolean
          example: true
        isAutoCaEnrollmentEnabled:
          type: boolean
          example: true
        isOttCaEnrollmentEnabled:
          type: boolean
          example: true
        name:
          type: string
          example: My CA
        tags:
          $ref: '#/components/schemas/tags'
    capabilities:
      type: string
      enum:
      - OIDC_AUTH
      - HA_CONTROLLER
    commonEdgeRouterProperties:
      required:
      - cost
      - disabled
      - hostname
      - isOnline
      - name
      - noTraversal
      - supportedProtocols
      - syncStatus
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
        hostname:
          type: string
        isOnline:
          type: boolean
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        supportedProtocols:
          type: object
          additionalProperties:
            type: string
        syncStatus:
          type: string
    configCreate:
      required:
      - configTypeId
      - data
      - name
      type: object
      properties:
        configTypeId:
          type: string
          description: The id of a config-type that the data section will match
        data:
          type: object
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
          nullable: false
        name:
          type: string
          example: default.ziti-tunneler-server.v1
        tags:
          $ref: '#/components/schemas/tags'
      description: A config create object
      example:
        configTypeId: cea49285-6c07-42cf-9f52-09a9b115c783
        data:
          hostname: example.com
          port: 80
        name: test-config
    configDetail:
      description: A config resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - configType
        - configTypeId
        - data
        - name
        type: object
        properties:
          configType:
            $ref: '#/components/schemas/entityRef'
          configTypeId:
            type: string
          data:
            type: object
            properties: {}
            description: The data section of a config is based on the schema of its
              type
          name:
            type: string
    configList:
      type: array
      description: An array of config resources
      items:
        $ref: '#/components/schemas/configDetail'
    configPatch:
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
        name:
          type: string
          example: default.ziti-tunneler-server.v1
        tags:
          $ref: '#/components/schemas/tags'
      description: A config patch object
      example:
        data:
          hostname: example.com
          port: 80
        name: example-config-name
    configTypeCreate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
        tags:
          $ref: '#/components/schemas/tags'
      description: A config-type create object
    configTypeDetail:
      description: A config-type resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - name
        - schema
        type: object
        properties:
          name:
            type: string
            example: ziti-tunneler-server.v1
          schema:
            type: object
            additionalProperties: true
            description: A JSON schema to enforce configuration against
    configTypeList:
      type: array
      description: An array of config-type resources
      items:
        $ref: '#/components/schemas/configTypeDetail'
    configTypePatch:
      type: object
      properties:
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
        tags:
          $ref: '#/components/schemas/tags'
      description: A config-type patch object
    configTypeUpdate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          example: ziti-tunneler-server.v1
        schema:
          type: object
          additionalProperties: true
          description: A JSON schema to enforce configuration against
        tags:
          $ref: '#/components/schemas/tags'
      description: A config-type update object
    configTypes:
      type: array
      description: Specific configuration types that should be returned
      items:
        type: string
    configUpdate:
      required:
      - data
      - name
      type: object
      properties:
        data:
          type: object
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
          nullable: false
        name:
          type: string
          example: default.ziti-tunneler-server.v1
        tags:
          $ref: '#/components/schemas/tags'
      description: A config update object
      example:
        data:
          hostname: example.com
          port: 80
        name: example-config-name
    controllerDetail:
      description: A controller resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - certPem
        - fingerprint
        - isOnline
        - lastJoinedAt
        - name
        type: object
        properties:
          apiAddresses:
            $ref: '#/components/schemas/apiAddressList'
          certPem:
            type: string
          ctrlAddress:
            type: string
            nullable: true
          fingerprint:
            type: string
          isOnline:
            type: boolean
          lastJoinedAt:
            type: string
            format: date-time
          name:
            type: string
    controllersList:
      type: array
      description: An array of controller resources
      items:
        $ref: '#/components/schemas/controllerDetail'
    createEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/createLocation'
        meta:
          $ref: '#/components/schemas/meta'
    createLocation:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/links'
        id:
          type: string
    currentApiSessionDetail:
      description: An API Session object for the current API session
      allOf:
      - $ref: '#/components/schemas/apiSessionDetail'
      - required:
        - expirationSeconds
        - expiresAt
        type: object
        properties:
          expirationSeconds:
            type: integer
          expiresAt:
            type: string
            format: date-time
    currentApiSessionDetailEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/currentApiSessionDetail'
        meta:
          $ref: '#/components/schemas/meta'
    currentIdentityDetailEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityDetail'
        meta:
          $ref: '#/components/schemas/meta'
    dataIntegrityCheckDetail:
      required:
      - description
      - fixed
      type: object
      properties:
        description:
          type: string
        fixed:
          type: boolean
    dataIntegrityCheckDetailList:
      type: array
      items:
        $ref: '#/components/schemas/dataIntegrityCheckDetail'
    dataIntegrityCheckDetails:
      required:
      - endTime
      - error
      - fixingErrors
      - inProgress
      - results
      - startTime
      - tooManyErrors
      type: object
      properties:
        endTime:
          type: string
          format: date-time
        error:
          type: string
        fixingErrors:
          type: boolean
        inProgress:
          type: boolean
        results:
          $ref: '#/components/schemas/dataIntegrityCheckDetailList'
        startTime:
          type: string
          format: date-time
        tooManyErrors:
          type: boolean
    dataIntegrityCheckResultEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/dataIntegrityCheckDetails'
        meta:
          $ref: '#/components/schemas/meta'
    detailApiSessionEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/apiSessionDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailAuthPolicyEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/authPolicyDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailAuthenticatorEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/authenticatorDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailCaEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/caDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailConfigEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/configDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailConfigTypeEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/configTypeDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailEdgeRouterPolicyEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/edgeRouterPolicyDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailEnrollmentEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/enrollmentDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailExternalJwtSignerEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/externalJwtSignerDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailIdentityEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailIdentityTypeEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityTypeDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailMfa:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - isVerified
        type: object
        properties:
          isVerified:
            type: boolean
          provisioningUrl:
            type: string
            description: Not provided if MFA verification has been completed
          recoveryCodes:
            type: array
            description: Not provided if MFA verification has been completed
            items:
              type: string
    detailMfaEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/detailMfa'
        meta:
          $ref: '#/components/schemas/meta'
    detailMfaRecoveryCodes:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - recoveryCodes
        type: object
        properties:
          recoveryCodes:
            type: array
            items:
              type: string
    detailMfaRecoveryCodesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/detailMfaRecoveryCodes'
        meta:
          $ref: '#/components/schemas/meta'
    detailPostureCheckEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postureCheckDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailPostureCheckTypeEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postureCheckTypeDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailRouterEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/routerDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailServiceEdgePolicyEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/serviceEdgeRouterPolicyDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailServiceEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/serviceDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailServicePolicyEnvelop:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/servicePolicyDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailSessionManagementEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sessionManagementDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailSessionRoutePathEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sessionRoutePathDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailSpecBodyEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/specBodyDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailSpecEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/specDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailTerminatorEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/terminatorDetail'
        meta:
          $ref: '#/components/schemas/meta'
    detailedEdgeRouterEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/edgeRouterDetail'
        meta:
          $ref: '#/components/schemas/meta'
    dialBind:
      type: string
      enum:
      - Dial
      - Bind
      - Invalid
    dialBindArray:
      type: array
      items:
        $ref: '#/components/schemas/dialBind'
    disableParams:
      required:
      - durationMinutes
      type: object
      properties:
        durationMinutes:
          type: integer
    edgeRouterCreate:
      required:
      - name
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        isTunnelerEnabled:
          type: boolean
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
      description: An edge router create object
    edgeRouterDetail:
      description: A detail edge router resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - $ref: '#/components/schemas/commonEdgeRouterProperties'
      - required:
        - isTunnelerEnabled
        - isVerified
        - roleAttributes
        type: object
        properties:
          certPem:
            type: string
            nullable: true
            x-omitempty: false
          enrollmentCreatedAt:
            type: string
            format: date-time
            nullable: true
          enrollmentExpiresAt:
            type: string
            format: date-time
            nullable: true
          enrollmentJwt:
            type: string
            nullable: true
          enrollmentToken:
            type: string
            nullable: true
          fingerprint:
            type: string
          isTunnelerEnabled:
            type: boolean
          isVerified:
            type: boolean
          roleAttributes:
            $ref: '#/components/schemas/attributes'
          unverifiedCertPem:
            type: string
            nullable: true
            x-omitempty: false
          unverifiedFingerprint:
            type: string
            nullable: true
            x-omitempty: false
          versionInfo:
            $ref: '#/components/schemas/versionInfo'
    edgeRouterList:
      type: array
      description: A list of edge router resources
      items:
        $ref: '#/components/schemas/edgeRouterDetail'
    edgeRouterPatch:
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        isTunnelerEnabled:
          type: boolean
        name:
          type: string
          nullable: true
        noTraversal:
          type: boolean
          nullable: true
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
      description: An edge router patch object
    edgeRouterPolicyCreate:
      required:
      - name
      - semantic
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        tags:
          $ref: '#/components/schemas/tags'
    edgeRouterPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - edgeRouterRoles
        - edgeRouterRolesDisplay
        - identityRoles
        - identityRolesDisplay
        - isSystem
        - name
        - semantic
        type: object
        properties:
          edgeRouterRoles:
            $ref: '#/components/schemas/roles'
          edgeRouterRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          identityRoles:
            $ref: '#/components/schemas/roles'
          identityRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          isSystem:
            type: boolean
          name:
            type: string
          semantic:
            $ref: '#/components/schemas/semantic'
    edgeRouterPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/edgeRouterPolicyDetail'
    edgeRouterPolicyPatch:
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        tags:
          $ref: '#/components/schemas/tags'
    edgeRouterPolicyUpdate:
      required:
      - name
      - semantic
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        tags:
          $ref: '#/components/schemas/tags'
    edgeRouterUpdate:
      required:
      - name
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        isTunnelerEnabled:
          type: boolean
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
      description: An edge router update object
    empty:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: object
          properties: {}
          example: {}
        meta:
          $ref: '#/components/schemas/meta'
    enrollmentCreate:
      required:
      - expiresAt
      - identityId
      - method
      type: object
      properties:
        caId:
          type: string
          nullable: true
        expiresAt:
          type: string
          format: date-time
        identityId:
          type: string
        method:
          type: string
          enum:
          - ott
          - ottca
          - updb
        username:
          type: string
          nullable: true
    enrollmentDetail:
      description: |
        An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the
        method, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments
        use the username field, but not vice versa.
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - expiresAt
        - method
        - token
        type: object
        properties:
          caId:
            type: string
            nullable: true
          edgeRouter:
            $ref: '#/components/schemas/entityRef'
          edgeRouterId:
            type: string
          expiresAt:
            type: string
            format: date-time
          identity:
            $ref: '#/components/schemas/entityRef'
          identityId:
            type: string
          jwt:
            type: string
          method:
            type: string
          token:
            type: string
          transitRouter:
            $ref: '#/components/schemas/entityRef'
          transitRouterId:
            type: string
          username:
            type: string
    enrollmentList:
      type: array
      description: An array of enrollment resources
      items:
        $ref: '#/components/schemas/enrollmentDetail'
    enrollmentRefresh:
      required:
      - expiresAt
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
    entityRef:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/links'
        entity:
          type: string
        id:
          type: string
        name:
          type: string
      description: A reference to another resource and links to interact with it
    envInfo:
      type: object
      properties:
        arch:
          maxLength: 255
          type: string
        domain:
          maxLength: 253
          type: string
        hostname:
          maxLength: 253
          type: string
        os:
          maxLength: 255
          type: string
        osRelease:
          maxLength: 255
          type: string
        osVersion:
          maxLength: 255
          type: string
      description: Environment information an authenticating client may provide
    externalIdClaim:
      required:
      - index
      - location
      - matcher
      - matcherCriteria
      - parser
      - parserCriteria
      type: object
      properties:
        index:
          type: integer
          nullable: true
        location:
          type: string
          nullable: true
          enum:
          - COMMON_NAME
          - SAN_URI
          - SAN_EMAIL
        matcher:
          type: string
          nullable: true
          enum:
          - ALL
          - PREFIX
          - SUFFIX
          - SCHEME
        matcherCriteria:
          type: string
          nullable: true
        parser:
          type: string
          nullable: true
          enum:
          - NONE
          - SPLIT
        parserCriteria:
          type: string
          nullable: true
    externalIdClaimPatch:
      type: object
      properties:
        index:
          type: integer
          nullable: true
        location:
          type: string
          nullable: true
          enum:
          - COMMON_NAME
          - SAN_URI
          - SAN_EMAIL
        matcher:
          type: string
          nullable: true
          enum:
          - ALL
          - PREFIX
          - SUFFIX
          - SCHEME
        matcherCriteria:
          type: string
          nullable: true
        parser:
          type: string
          nullable: true
          enum:
          - NONE
          - SPLIT
        parserCriteria:
          type: string
          nullable: true
    externalJwtSignerCreate:
      required:
      - audience
      - enabled
      - issuer
      - name
      type: object
      properties:
        audience:
          type: string
          nullable: true
        certPem:
          type: string
          nullable: true
        claimsProperty:
          type: string
          nullable: true
        clientId:
          type: string
          nullable: true
        enabled:
          type: boolean
        externalAuthUrl:
          type: string
          format: url
          nullable: true
        issuer:
          type: string
        jwksEndpoint:
          type: string
          format: uri
          nullable: true
        kid:
          type: string
          nullable: true
        name:
          type: string
          example: MyApps Signer
        scopes:
          type: array
          nullable: true
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        useExternalId:
          type: boolean
          nullable: true
      description: A create Certificate Authority (CA) object
    externalJwtSignerDetail:
      description: A External JWT Signer resource
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - audience
        - certPem
        - claimsProperty
        - clientId
        - commonName
        - enabled
        - externalAuthUrl
        - fingerprint
        - issuer
        - jwksEndpoint
        - kid
        - name
        - notAfter
        - notBefore
        - scopes
        - useExternalId
        type: object
        properties:
          audience:
            type: string
          certPem:
            type: string
            nullable: true
          claimsProperty:
            type: string
          clientId:
            type: string
          commonName:
            type: string
          enabled:
            type: boolean
          externalAuthUrl:
            type: string
            format: url
          fingerprint:
            type: string
          issuer:
            type: string
          jwksEndpoint:
            type: string
            format: uri
            nullable: true
          kid:
            type: string
          name:
            type: string
            example: MyApps Signer
          notAfter:
            type: string
            format: date-time
          notBefore:
            type: string
            format: date-time
          scopes:
            type: array
            items:
              type: string
          useExternalId:
            type: boolean
    externalJwtSignerList:
      type: array
      description: An array of External JWT Signers resources
      items:
        $ref: '#/components/schemas/externalJwtSignerDetail'
    externalJwtSignerPatch:
      type: object
      properties:
        audience:
          type: string
          nullable: true
        certPem:
          type: string
          nullable: true
        claimsProperty:
          type: string
          nullable: true
        clientId:
          type: string
          nullable: true
        enabled:
          type: boolean
          nullable: true
        externalAuthUrl:
          type: string
          format: url
          nullable: true
        issuer:
          type: string
          nullable: true
        jwksEndpoint:
          type: string
          format: uri
          nullable: true
        kid:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          example: MyApps Signer
        scopes:
          type: array
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        useExternalId:
          type: boolean
          nullable: true
    externalJwtSignerUpdate:
      required:
      - audience
      - enabled
      - issuer
      - name
      type: object
      properties:
        audience:
          type: string
          nullable: true
        certPem:
          type: string
          nullable: true
        claimsProperty:
          type: string
          nullable: true
        clientId:
          type: string
          nullable: true
        enabled:
          type: boolean
        externalAuthUrl:
          type: string
          format: url
          nullable: true
        issuer:
          type: string
        jwksEndpoint:
          type: string
          format: uri
          nullable: true
        kid:
          type: string
          nullable: true
        name:
          type: string
          example: MyApps Signer
        scopes:
          type: array
          nullable: true
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        useExternalId:
          type: boolean
          nullable: true
    failedServiceRequest:
      type: object
      properties:
        apiSessionId:
          type: string
        policyFailures:
          type: array
          items:
            $ref: '#/components/schemas/policyFailure'
        serviceId:
          type: string
        serviceName:
          type: string
        sessionType:
          $ref: '#/components/schemas/dialBind'
        when:
          type: string
          format: date-time
    failedServiceRequestEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/failedServiceRequestList'
        meta:
          $ref: '#/components/schemas/meta'
    failedServiceRequestList:
      type: array
      items:
        $ref: '#/components/schemas/failedServiceRequest'
    getIdentityPolicyAdviceEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/policyAdvice'
        meta:
          $ref: '#/components/schemas/meta'
    identityAuthenticators:
      type: object
      properties:
        cert:
          type: object
          properties:
            fingerprint:
              type: string
            id:
              type: string
        updb:
          type: object
          properties:
            id:
              type: string
            username:
              type: string
    identityCreate:
      required:
      - isAdmin
      - name
      - type
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        authPolicyId:
          type: string
          nullable: true
        defaultHostingCost:
          $ref: '#/components/schemas/terminatorCost'
        defaultHostingPrecedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        enrollment:
          type: object
          properties:
            ott:
              type: boolean
            ottca:
              type: string
            updb:
              type: string
        externalId:
          type: string
          nullable: true
        isAdmin:
          type: boolean
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        serviceHostingCosts:
          $ref: '#/components/schemas/terminatorCostMap'
        serviceHostingPrecedences:
          $ref: '#/components/schemas/terminatorPrecedenceMap'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/identityType'
      description: An identity to create
    identityDetail:
      description: Detail of a specific identity
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - authPolicy
        - authPolicyId
        - authenticators
        - defaultHostingCost
        - disabled
        - enrollment
        - envInfo
        - externalId
        - hasApiSession
        - hasEdgeRouterConnection
        - isAdmin
        - isDefaultAdmin
        - isMfaEnabled
        - name
        - roleAttributes
        - sdkInfo
        - serviceHostingCosts
        - serviceHostingPrecedences
        - type
        - typeId
        type: object
        properties:
          appData:
            $ref: '#/components/schemas/tags'
          authPolicy:
            $ref: '#/components/schemas/entityRef'
          authPolicyId:
            type: string
          authenticators:
            $ref: '#/components/schemas/identityAuthenticators'
          defaultHostingCost:
            $ref: '#/components/schemas/terminatorCost'
          defaultHostingPrecedence:
            $ref: '#/components/schemas/terminatorPrecedence'
          disabled:
            type: boolean
          disabledAt:
            type: string
            format: date-time
            nullable: true
          disabledUntil:
            type: string
            format: date-time
            nullable: true
          enrollment:
            $ref: '#/components/schemas/identityEnrollments'
          envInfo:
            $ref: '#/components/schemas/envInfo'
          externalId:
            type: string
            nullable: true
          hasApiSession:
            type: boolean
          hasEdgeRouterConnection:
            type: boolean
          isAdmin:
            type: boolean
          isDefaultAdmin:
            type: boolean
          isMfaEnabled:
            type: boolean
          name:
            type: string
          roleAttributes:
            $ref: '#/components/schemas/attributes'
          sdkInfo:
            $ref: '#/components/schemas/sdkInfo'
          serviceHostingCosts:
            $ref: '#/components/schemas/terminatorCostMap'
          serviceHostingPrecedences:
            $ref: '#/components/schemas/terminatorPrecedenceMap'
          type:
            $ref: '#/components/schemas/entityRef'
          typeId:
            type: string
    identityEnrollments:
      type: object
      properties:
        ott:
          type: object
          properties:
            expiresAt:
              type: string
              format: date-time
            id:
              type: string
            jwt:
              type: string
            token:
              type: string
        ottca:
          type: object
          properties:
            ca:
              $ref: '#/components/schemas/entityRef'
            caId:
              type: string
            expiresAt:
              type: string
              format: date-time
            id:
              type: string
            jwt:
              type: string
            token:
              type: string
        updb:
          type: object
          properties:
            expiresAt:
              type: string
              format: date-time
            id:
              type: string
            jwt:
              type: string
            token:
              type: string
    identityExtendCerts:
      type: object
      properties:
        ca:
          type: string
          description: A PEM encoded set of CA certificates
        clientCert:
          type: string
          description: A PEM encoded client certificate
    identityExtendEnrollmentEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityExtendCerts'
        meta:
          $ref: '#/components/schemas/meta'
    identityExtendEnrollmentRequest:
      required:
      - clientCertCsr
      type: object
      properties:
        clientCertCsr:
          type: string
    identityExtendValidateEnrollmentRequest:
      required:
      - clientCert
      type: object
      properties:
        clientCert:
          type: string
          description: A PEM encoded client certificate previously returned after
            an extension request
    identityList:
      type: array
      description: A list of identities
      items:
        $ref: '#/components/schemas/identityDetail'
    identityPatch:
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        authPolicyId:
          type: string
          nullable: true
        defaultHostingCost:
          $ref: '#/components/schemas/terminatorCost'
        defaultHostingPrecedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        externalId:
          type: string
          nullable: true
        isAdmin:
          type: boolean
          nullable: true
        name:
          type: string
          nullable: true
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        serviceHostingCosts:
          $ref: '#/components/schemas/terminatorCostMap'
        serviceHostingPrecedences:
          $ref: '#/components/schemas/terminatorPrecedenceMap'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/identityType'
    identityType:
      type: string
      enum:
      - User
      - Device
      - Service
      - Router
      - Default
    identityTypeDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - type: object
        properties:
          name:
            type: string
    identityTypeList:
      type: array
      items:
        $ref: '#/components/schemas/identityTypeDetail'
    identityUpdate:
      required:
      - isAdmin
      - name
      - type
      type: object
      properties:
        appData:
          $ref: '#/components/schemas/tags'
        authPolicyId:
          type: string
          nullable: true
        defaultHostingCost:
          $ref: '#/components/schemas/terminatorCost'
        defaultHostingPrecedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        externalId:
          type: string
          nullable: true
        isAdmin:
          type: boolean
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        serviceHostingCosts:
          $ref: '#/components/schemas/terminatorCostMap'
        serviceHostingPrecedences:
          $ref: '#/components/schemas/terminatorPrecedenceMap'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/identityType'
    link:
      required:
      - href
      type: object
      properties:
        comment:
          type: string
        href:
          type: string
          format: uri
        method:
          type: string
      description: A link to another resource
    links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/link'
      description: A map of named links
      x-omitempty: false
    listApiSessionsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/apiSessionList'
        meta:
          $ref: '#/components/schemas/meta'
    listAuthPoliciesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/authPolicyList'
        meta:
          $ref: '#/components/schemas/meta'
    listAuthenticatorsEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/authenticatorList'
        meta:
          $ref: '#/components/schemas/meta'
    listCasEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/caList'
        meta:
          $ref: '#/components/schemas/meta'
    listConfigTypesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/configTypeList'
        meta:
          $ref: '#/components/schemas/meta'
    listConfigsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/configList'
        meta:
          $ref: '#/components/schemas/meta'
    listControllersEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/controllersList'
        meta:
          $ref: '#/components/schemas/meta'
    listEdgeRouterPoliciesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/edgeRouterPolicyList'
        meta:
          $ref: '#/components/schemas/meta'
    listEdgeRoutersEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/edgeRouterList'
        meta:
          $ref: '#/components/schemas/meta'
    listEnrollmentsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/enrollmentList'
        meta:
          $ref: '#/components/schemas/meta'
    listEnumeratedCapabilitiesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/capabilities'
        meta:
          $ref: '#/components/schemas/meta'
    listExternalJwtSignersEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/externalJwtSignerList'
        meta:
          $ref: '#/components/schemas/meta'
    listIdentitiesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityList'
        meta:
          $ref: '#/components/schemas/meta'
    listIdentityTypesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/identityTypeList'
        meta:
          $ref: '#/components/schemas/meta'
    listPostureCheckEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/postureCheckDetail'
        meta:
          $ref: '#/components/schemas/meta'
    listPostureCheckTypesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postureCheckTypeList'
        meta:
          $ref: '#/components/schemas/meta'
    listRoleAttributesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/roleAttributesList'
        meta:
          $ref: '#/components/schemas/meta'
    listRoutersEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/routerList'
        meta:
          $ref: '#/components/schemas/meta'
    listServiceConfigsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/serviceConfigList'
        meta:
          $ref: '#/components/schemas/meta'
    listServiceEdgeRouterPoliciesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/serviceEdgeRouterPolicyList'
        meta:
          $ref: '#/components/schemas/meta'
    listServicePoliciesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/servicePolicyList'
        meta:
          $ref: '#/components/schemas/meta'
    listServicesEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/serviceList'
        meta:
          $ref: '#/components/schemas/meta'
    listSessionsManagementEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/sessionManagementList'
        meta:
          $ref: '#/components/schemas/meta'
    listSpecsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/specList'
        meta:
          $ref: '#/components/schemas/meta'
    listSummaryCounts:
      type: object
      additionalProperties:
        type: integer
    listSummaryCountsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/listSummaryCounts'
        meta:
          $ref: '#/components/schemas/meta'
    listTerminatorsEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/terminatorList'
        meta:
          $ref: '#/components/schemas/meta'
    listVersionEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/version'
        meta:
          $ref: '#/components/schemas/meta'
    meta:
      type: object
      properties:
        apiEnrollmentVersion:
          type: string
        apiVersion:
          type: string
        filterableFields:
          type: array
          items:
            type: string
          x-omitempty: true
        pagination:
          $ref: '#/components/schemas/pagination'
    mfaCode:
      required:
      - code
      type: object
      properties:
        code:
          type: string
    mfaFormats:
      type: string
      enum:
      - numeric
      - alpha
      - alphaNumeric
    mfaProviders:
      type: string
      enum:
      - ziti
      - url
    namedRole:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
    namedRoles:
      type: array
      items:
        $ref: '#/components/schemas/namedRole'
      x-omitempty: false
    operatingSystem:
      required:
      - type
      - versions
      type: object
      properties:
        type:
          $ref: '#/components/schemas/osType'
        versions:
          type: array
          items:
            type: string
    osType:
      type: string
      enum:
      - Windows
      - WindowsServer
      - Android
      - iOS
      - Linux
      - macOS
    pagination:
      required:
      - limit
      - offset
      - totalCount
      type: object
      properties:
        limit:
          type: number
          format: int64
        offset:
          type: number
          format: int64
        totalCount:
          type: number
          format: int64
    password:
      maxLength: 100
      minLength: 5
      type: string
    passwordNullable:
      maxLength: 100
      minLength: 5
      type: string
      nullable: true
      x-nullable: true
    policyAdvice:
      type: object
      properties:
        commonRouters:
          type: array
          items:
            $ref: '#/components/schemas/routerEntityRef'
        identity:
          $ref: '#/components/schemas/entityRef'
        identityId:
          type: string
        identityRouterCount:
          type: number
          format: int32
        isBindAllowed:
          type: boolean
        isDialAllowed:
          type: boolean
        service:
          $ref: '#/components/schemas/entityRef'
        serviceId:
          type: string
        serviceRouterCount:
          type: number
          format: int32
    policyFailure:
      type: object
      properties:
        checks:
          type: array
          items:
            $ref: '#/components/schemas/postureCheckFailure'
        policyId:
          type: string
        policyName:
          type: string
    postureCheckCreate:
      required:
      - name
      - typeId
      type: object
      properties:
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
        typeId:
          $ref: '#/components/schemas/postureCheckType'
      discriminator:
        propertyName: typeId
    postureCheckDetail:
      required:
      - _links
      - createdAt
      - id
      - name
      - roleAttributes
      - tags
      - typeId
      - updatedAt
      - version
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/links'
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
        typeId:
          type: string
        updatedAt:
          type: string
          format: date-time
        version:
          type: integer
      discriminator:
        propertyName: typeId
    postureCheckDomainCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - required:
        - domains
        type: object
        properties:
          domains:
            minItems: 1
            type: array
            items:
              type: string
      x-class: DOMAIN
    postureCheckDomainDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - required:
        - domains
        type: object
        properties:
          domains:
            minItems: 1
            type: array
            items:
              type: string
      x-class: DOMAIN
    postureCheckDomainPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - type: object
        properties:
          domains:
            minItems: 1
            type: array
            items:
              type: string
      x-class: DOMAIN
    postureCheckDomainUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - required:
        - domains
        type: object
        properties:
          domains:
            minItems: 1
            type: array
            items:
              type: string
      x-class: DOMAIN
    postureCheckFailure:
      required:
      - postureCheckId
      - postureCheckName
      - postureCheckType
      type: object
      properties:
        postureCheckId:
          type: string
        postureCheckName:
          type: string
        postureCheckType:
          type: string
      discriminator:
        propertyName: postureCheckType
    postureCheckFailureDomain:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - expectedValue
        type: object
        properties:
          actualValue:
            type: string
          expectedValue:
            type: array
            items:
              type: string
      x-class: DOMAIN
    postureCheckFailureMacAddress:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - expectedValue
        type: object
        properties:
          actualValue:
            type: array
            items:
              type: string
          expectedValue:
            type: array
            items:
              type: string
      x-class: MAC
    postureCheckFailureMfa:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - criteria
        - expectedValue
        type: object
        properties:
          actualValue:
            $ref: '#/components/schemas/postureChecksFailureMfaValues'
          criteria:
            $ref: '#/components/schemas/postureChecksFailureMfaCriteria'
          expectedValue:
            $ref: '#/components/schemas/postureChecksFailureMfaValues'
      x-class: MFA
    postureCheckFailureOperatingSystem:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - expectedValue
        type: object
        properties:
          actualValue:
            $ref: '#/components/schemas/postureCheckFailureOperatingSystemActual'
          expectedValue:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
      x-class: OS
    postureCheckFailureOperatingSystemActual:
      required:
      - type
      - version
      type: object
      properties:
        type:
          type: string
        version:
          type: string
    postureCheckFailureProcess:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - expectedValue
        type: object
        properties:
          actualValue:
            $ref: '#/components/schemas/postureCheckFailureProcessActual'
          expectedValue:
            $ref: '#/components/schemas/process'
      x-class: PROCESS
    postureCheckFailureProcessActual:
      required:
      - hash
      - isRunning
      - signerFingerprints
      type: object
      properties:
        hash:
          type: string
        isRunning:
          type: boolean
        osType:
          $ref: '#/components/schemas/osType'
        path:
          type: string
        signerFingerprints:
          type: array
          items:
            type: string
    postureCheckFailureProcessMulti:
      allOf:
      - $ref: '#/components/schemas/postureCheckFailure'
      - required:
        - actualValue
        - expectedValue
        - semantic
        type: object
        properties:
          actualValue:
            type: array
            items:
              $ref: '#/components/schemas/postureCheckFailureProcessActual'
          expectedValue:
            type: array
            items:
              $ref: '#/components/schemas/processMulti'
          semantic:
            $ref: '#/components/schemas/semantic'
      x-class: PROCESS_MULTI
    postureCheckMacAddressCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - required:
        - macAddresses
        type: object
        properties:
          macAddresses:
            minItems: 1
            type: array
            items:
              type: string
      x-class: MAC
    postureCheckMacAddressDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - required:
        - macAddresses
        type: object
        properties:
          macAddresses:
            minItems: 1
            type: array
            items:
              type: string
      x-class: MAC
    postureCheckMacAddressPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - type: object
        properties:
          macAddresses:
            minItems: 1
            type: array
            items:
              type: string
      x-class: MAC
    postureCheckMacAddressUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - required:
        - macAddresses
        type: object
        properties:
          macAddresses:
            minItems: 1
            type: array
            items:
              type: string
      x-class: MAC
    postureCheckMfaCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - $ref: '#/components/schemas/postureCheckMfaProperties'
      x-class: MFA
    postureCheckMfaDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - $ref: '#/components/schemas/postureCheckMfaProperties'
      x-class: MFA
    postureCheckMfaPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - $ref: '#/components/schemas/postureCheckMfaPropertiesPatch'
      x-class: MFA
    postureCheckMfaProperties:
      type: object
      properties:
        ignoreLegacyEndpoints:
          type: boolean
        promptOnUnlock:
          type: boolean
        promptOnWake:
          type: boolean
        timeoutSeconds:
          type: integer
    postureCheckMfaPropertiesPatch:
      type: object
      properties:
        ignoreLegacyEndpoints:
          type: boolean
          nullable: true
        promptOnUnlock:
          type: boolean
          nullable: true
        promptOnWake:
          type: boolean
          nullable: true
        timeoutSeconds:
          type: integer
          nullable: true
    postureCheckMfaUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - $ref: '#/components/schemas/postureCheckMfaProperties'
      x-class: MFA
    postureCheckOperatingSystemCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - required:
        - operatingSystems
        type: object
        properties:
          operatingSystems:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
      x-class: OS
    postureCheckOperatingSystemDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - required:
        - operatingSystems
        type: object
        properties:
          operatingSystems:
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
      x-class: OS
    postureCheckOperatingSystemPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - type: object
        properties:
          operatingSystems:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
      x-class: OS
    postureCheckOperatingSystemUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - required:
        - operatingSystems
        type: object
        properties:
          operatingSystems:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
      x-class: OS
    postureCheckPatch:
      required:
      - typeId
      type: object
      properties:
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
        typeId:
          $ref: '#/components/schemas/postureCheckType'
      discriminator:
        propertyName: typeId
    postureCheckProcessCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - required:
        - process
        type: object
        properties:
          process:
            $ref: '#/components/schemas/process'
      x-class: PROCESS
    postureCheckProcessDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - required:
        - process
        type: object
        properties:
          process:
            $ref: '#/components/schemas/process'
      x-class: PROCESS
    postureCheckProcessMultiCreate:
      allOf:
      - $ref: '#/components/schemas/postureCheckCreate'
      - required:
        - processes
        - semantic
        type: object
        properties:
          processes:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/processMulti'
          semantic:
            $ref: '#/components/schemas/semantic'
      x-class: PROCESS_MULTI
    postureCheckProcessMultiDetail:
      allOf:
      - $ref: '#/components/schemas/postureCheckDetail'
      - required:
        - processes
        - semantic
        type: object
        properties:
          processes:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/processMulti'
          semantic:
            $ref: '#/components/schemas/semantic'
      x-class: PROCESS_MULTI
    postureCheckProcessMultiPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - type: object
        properties:
          processes:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/processMulti'
          semantic:
            $ref: '#/components/schemas/semantic'
      x-class: PROCESS_MULTI
    postureCheckProcessMultiUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - required:
        - processes
        - semantic
        type: object
        properties:
          processes:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/processMulti'
          semantic:
            $ref: '#/components/schemas/semantic'
      x-class: PROCESS_MULTI
    postureCheckProcessPatch:
      allOf:
      - $ref: '#/components/schemas/postureCheckPatch'
      - type: object
        properties:
          process:
            $ref: '#/components/schemas/process'
      x-class: PROCESS
    postureCheckProcessUpdate:
      allOf:
      - $ref: '#/components/schemas/postureCheckUpdate'
      - required:
        - process
        type: object
        properties:
          process:
            $ref: '#/components/schemas/process'
      x-class: PROCESS
    postureCheckType:
      type: string
      enum:
      - OS
      - PROCESS
      - DOMAIN
      - MAC
      - MFA
      - PROCESS_MULTI
    postureCheckTypeDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - name
        - operatingSystems
        - version
        type: object
        properties:
          name:
            type: string
          operatingSystems:
            type: array
            items:
              $ref: '#/components/schemas/operatingSystem'
          version:
            type: string
    postureCheckTypeList:
      type: array
      items:
        $ref: '#/components/schemas/postureCheckTypeDetail'
    postureCheckUpdate:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        roleAttributes:
          $ref: '#/components/schemas/attributes'
        tags:
          $ref: '#/components/schemas/tags'
        typeId:
          $ref: '#/components/schemas/postureCheckType'
      discriminator:
        propertyName: typeId
    postureChecksFailureMfaCriteria:
      required:
      - passedMfaAt
      - timeoutRemainingSeconds
      - timeoutSeconds
      - unlockedAt
      - wokenAt
      type: object
      properties:
        passedMfaAt:
          type: string
          format: date-time
        timeoutRemainingSeconds:
          type: integer
        timeoutSeconds:
          type: integer
        unlockedAt:
          type: string
          format: date-time
        wokenAt:
          type: string
          format: date-time
    postureChecksFailureMfaValues:
      type: object
      properties:
        passedMfa:
          type: boolean
          x-omitempty: false
        passedOnUnlock:
          type: boolean
          x-omitempty: false
        passedOnWake:
          type: boolean
          x-omitempty: false
        timedOut:
          type: boolean
          x-omitempty: false
    postureData:
      required:
      - apiSessionPostureData
      - domain
      - mac
      - os
      - processes
      type: object
      properties:
        apiSessionPostureData:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiSessionPostureData'
        domain:
          $ref: '#/components/schemas/postureDataDomain'
        mac:
          $ref: '#/components/schemas/postureDataMac'
        os:
          $ref: '#/components/schemas/postureDataOs'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/postureDataProcess'
    postureDataBase:
      required:
      - lastUpdatedAt
      - postureCheckId
      - timedOut
      type: object
      properties:
        lastUpdatedAt:
          type: string
          format: date-time
        postureCheckId:
          type: string
        timedOut:
          type: boolean
    postureDataDomain:
      allOf:
      - $ref: '#/components/schemas/postureDataBase'
      - required:
        - domain
        type: object
        properties:
          domain:
            type: string
    postureDataEndpointState:
      required:
      - unlockedAt
      - wokenAt
      type: object
      properties:
        unlockedAt:
          type: string
          format: date-time
        wokenAt:
          type: string
          format: date-time
    postureDataEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postureData'
        meta:
          $ref: '#/components/schemas/meta'
    postureDataMac:
      allOf:
      - $ref: '#/components/schemas/postureDataBase'
      - required:
        - addresses
        type: object
        properties:
          addresses:
            type: array
            items:
              type: string
    postureDataMfa:
      required:
      - apiSessionId
      - passedAt
      - passedMfa
      - passedOnUnlock
      - passedOnWake
      type: object
      properties:
        apiSessionId:
          type: string
        passedAt:
          type: string
          format: date-time
          x-omitempty: false
        passedMfa:
          type: boolean
          x-omitempty: false
        passedOnUnlock:
          type: boolean
          x-omitempty: false
        passedOnWake:
          type: boolean
          x-omitempty: false
    postureDataOs:
      allOf:
      - $ref: '#/components/schemas/postureDataBase'
      - required:
        - build
        - type
        - version
        type: object
        properties:
          build:
            type: string
          type:
            type: string
          version:
            type: string
    postureDataProcess:
      allOf:
      - $ref: '#/components/schemas/postureDataBase'
      - type: object
        properties:
          binaryHash:
            type: string
          isRunning:
            type: boolean
          signerFingerprints:
            type: array
            items:
              type: string
    postureQueries:
      required:
      - isPassing
      - policyId
      - postureQueries
      type: object
      properties:
        isPassing:
          type: boolean
        policyId:
          type: string
        policyType:
          $ref: '#/components/schemas/dialBind'
        postureQueries:
          type: array
          items:
            $ref: '#/components/schemas/postureQuery'
    postureQuery:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - isPassing
        - queryType
        - timeout
        - timeoutRemaining
        type: object
        properties:
          isPassing:
            type: boolean
          process:
            $ref: '#/components/schemas/postureQueryProcess'
          processes:
            type: array
            items:
              $ref: '#/components/schemas/postureQueryProcess'
          queryType:
            $ref: '#/components/schemas/postureCheckType'
          timeout:
            type: integer
          timeoutRemaining:
            type: integer
    postureQueryProcess:
      type: object
      properties:
        osType:
          $ref: '#/components/schemas/osType'
        path:
          type: string
    process:
      required:
      - osType
      - path
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
        osType:
          $ref: '#/components/schemas/osType'
        path:
          type: string
        signerFingerprint:
          type: string
    processMulti:
      required:
      - osType
      - path
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
        osType:
          $ref: '#/components/schemas/osType'
        path:
          type: string
        signerFingerprints:
          type: array
          items:
            type: string
    reEnroll:
      required:
      - expiresAt
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
    roleAttributesList:
      type: array
      description: An array of role attributes
      items:
        type: string
    roles:
      type: array
      items:
        type: string
      x-omitempty: false
    routerCreate:
      required:
      - name
      type: object
      properties:
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        tags:
          $ref: '#/components/schemas/tags'
    routerDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - cost
        - disabled
        - fingerprint
        - isOnline
        - isVerified
        - name
        - noTraversal
        type: object
        properties:
          cost:
            maximum: 65535
            minimum: 0
            type: integer
          disabled:
            type: boolean
          enrollmentCreatedAt:
            type: string
            format: date-time
            nullable: true
          enrollmentExpiresAt:
            type: string
            format: date-time
            nullable: true
          enrollmentJwt:
            type: string
            nullable: true
          enrollmentToken:
            type: string
            nullable: true
          fingerprint:
            type: string
          isOnline:
            type: boolean
          isVerified:
            type: boolean
          name:
            type: string
          noTraversal:
            type: boolean
          unverifiedCertPem:
            type: string
            nullable: true
            x-omitempty: false
          unverifiedFingerprint:
            type: string
            nullable: true
            x-omitempty: false
    routerEntityRef:
      allOf:
      - $ref: '#/components/schemas/entityRef'
      - required:
        - isOnline
        type: object
        properties:
          isOnline:
            type: boolean
    routerList:
      type: array
      items:
        $ref: '#/components/schemas/routerDetail'
    routerPatch:
      type: object
      properties:
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        tags:
          $ref: '#/components/schemas/tags'
    routerUpdate:
      required:
      - name
      type: object
      properties:
        cost:
          maximum: 65535
          minimum: 0
          type: integer
          nullable: true
        disabled:
          type: boolean
          nullable: true
        name:
          type: string
        noTraversal:
          type: boolean
          nullable: true
        tags:
          $ref: '#/components/schemas/tags'
    sdkInfo:
      type: object
      properties:
        appId:
          maxLength: 255
          type: string
        appVersion:
          maxLength: 255
          type: string
        branch:
          maxLength: 255
          type: string
        revision:
          maxLength: 255
          type: string
        type:
          maxLength: 255
          type: string
        version:
          maxLength: 255
          type: string
      description: SDK information an authenticating client may provide
    semantic:
      type: string
      enum:
      - AllOf
      - AnyOf
    serviceConfigAssign:
      required:
      - configId
      - serviceId
      type: object
      properties:
        configId:
          type: string
        serviceId:
          type: string
    serviceConfigDetail:
      required:
      - config
      - configId
      - service
      - serviceId
      type: object
      properties:
        config:
          $ref: '#/components/schemas/entityRef'
        configId:
          type: string
        service:
          $ref: '#/components/schemas/entityRef'
        serviceId:
          type: string
      example:
        config:
          _links:
            self:
              href: ./identities/13347602-ba34-4ff7-8082-e533ba945744
          id: 13347602-ba34-4ff7-8082-e533ba945744
          name: test-config-02fade09-fcc3-426c-854e-18539726bdc6
          urlName: configs
        service:
          _links:
            self:
              href: ./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e
          id: 913a8c63-17a6-44d7-82b3-9f6eb997cf8e
          name: netcat4545-egress-r2
          urlName: services
    serviceConfigList:
      type: array
      items:
        $ref: '#/components/schemas/serviceConfigDetail'
    serviceConfigsAssignList:
      type: array
      items:
        $ref: '#/components/schemas/serviceConfigAssign'
    serviceCreate:
      required:
      - encryptionRequired
      - name
      type: object
      properties:
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: Describes whether connections must support end-to-end encryption
            on both sides of the connection.
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        terminatorStrategy:
          type: string
    serviceDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - config
        - configs
        - encryptionRequired
        - maxIdleTimeMillis
        - name
        - permissions
        - postureQueries
        - roleAttributes
        - terminatorStrategy
        type: object
        properties:
          config:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                type: object
                properties: {}
            description: map of config data for this service keyed by the config type
              name. Only configs of the types requested will be returned.
          configs:
            type: array
            items:
              type: string
          encryptionRequired:
            type: boolean
            description: "Describes whether connections must support end-to-end encryption\
              \ on both sides of the connection. Read-only property, set at create."
          maxIdleTimeMillis:
            type: integer
          name:
            type: string
          permissions:
            $ref: '#/components/schemas/dialBindArray'
          postureQueries:
            type: array
            items:
              $ref: '#/components/schemas/postureQueries'
          roleAttributes:
            $ref: '#/components/schemas/attributes'
          terminatorStrategy:
            type: string
    serviceEdgeRouterPolicyCreate:
      required:
      - name
      - semantic
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
    serviceEdgeRouterPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - edgeRouterRoles
        - edgeRouterRolesDisplay
        - name
        - semantic
        - serviceRoles
        - serviceRolesDisplay
        type: object
        properties:
          edgeRouterRoles:
            $ref: '#/components/schemas/roles'
          edgeRouterRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          name:
            type: string
          semantic:
            $ref: '#/components/schemas/semantic'
          serviceRoles:
            $ref: '#/components/schemas/roles'
          serviceRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
    serviceEdgeRouterPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/serviceEdgeRouterPolicyDetail'
    serviceEdgeRouterPolicyPatch:
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
    serviceEdgeRouterPolicyUpdate:
      required:
      - name
      - semantic
      type: object
      properties:
        edgeRouterRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
    serviceList:
      type: array
      items:
        $ref: '#/components/schemas/serviceDetail'
    servicePatch:
      type: object
      properties:
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        terminatorStrategy:
          type: string
    servicePolicyCreate:
      required:
      - name
      - semantic
      - type
      type: object
      properties:
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        postureCheckRoles:
          $ref: '#/components/schemas/roles'
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/dialBind'
    servicePolicyDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - identityRoles
        - identityRolesDisplay
        - name
        - postureCheckRoles
        - postureCheckRolesDisplay
        - semantic
        - serviceRoles
        - serviceRolesDisplay
        - type
        type: object
        properties:
          identityRoles:
            $ref: '#/components/schemas/roles'
          identityRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          name:
            type: string
          postureCheckRoles:
            $ref: '#/components/schemas/roles'
          postureCheckRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          semantic:
            $ref: '#/components/schemas/semantic'
          serviceRoles:
            $ref: '#/components/schemas/roles'
          serviceRolesDisplay:
            $ref: '#/components/schemas/namedRoles'
          type:
            $ref: '#/components/schemas/dialBind'
    servicePolicyList:
      type: array
      items:
        $ref: '#/components/schemas/servicePolicyDetail'
    servicePolicyPatch:
      type: object
      properties:
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        postureCheckRoles:
          $ref: '#/components/schemas/roles'
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/dialBind'
    servicePolicyUpdate:
      required:
      - name
      - semantic
      - type
      type: object
      properties:
        identityRoles:
          $ref: '#/components/schemas/roles'
        name:
          type: string
        postureCheckRoles:
          $ref: '#/components/schemas/roles'
        semantic:
          $ref: '#/components/schemas/semantic'
        serviceRoles:
          $ref: '#/components/schemas/roles'
        tags:
          $ref: '#/components/schemas/tags'
        type:
          $ref: '#/components/schemas/dialBind'
    serviceUpdate:
      required:
      - name
      type: object
      properties:
        configs:
          type: array
          items:
            type: string
        encryptionRequired:
          type: boolean
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          type: array
          items:
            type: string
        tags:
          $ref: '#/components/schemas/tags'
        terminatorStrategy:
          type: string
    sessionDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - apiSession
        - apiSessionId
        - edgeRouters
        - identityId
        - service
        - serviceId
        - token
        - type
        type: object
        properties:
          apiSession:
            $ref: '#/components/schemas/entityRef'
          apiSessionId:
            type: string
          edgeRouters:
            type: array
            items:
              $ref: '#/components/schemas/sessionEdgeRouter'
          identityId:
            type: string
          service:
            $ref: '#/components/schemas/entityRef'
          serviceId:
            type: string
          token:
            type: string
          type:
            $ref: '#/components/schemas/dialBind'
    sessionEdgeRouter:
      allOf:
      - $ref: '#/components/schemas/commonEdgeRouterProperties'
      - required:
        - urls
        type: object
        properties:
          urls:
            type: object
            additionalProperties:
              type: string
    sessionManagementDetail:
      allOf:
      - $ref: '#/components/schemas/sessionDetail'
      - type: object
        properties:
          servicePolicies:
            type: array
            items:
              $ref: '#/components/schemas/entityRef'
    sessionManagementList:
      type: array
      items:
        $ref: '#/components/schemas/sessionManagementDetail'
    sessionRoutePathDetail:
      type: object
      properties:
        routePath:
          type: array
          items:
            type: string
    specBodyDetail:
      type: string
    specDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - name
        type: object
        properties:
          name:
            type: string
    specList:
      type: array
      items:
        $ref: '#/components/schemas/specDetail'
    subTags:
      type: object
      additionalProperties:
        type: object
        properties: {}
    tags:
      description: "A map of user defined fields and values. The values are limited\
        \ to the following types/values: null, string, boolean"
      allOf:
      - $ref: '#/components/schemas/subTags'
    terminatorCost:
      maximum: 65535
      minimum: 0
      type: integer
    terminatorCostMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/terminatorCost'
    terminatorCreate:
      required:
      - address
      - binding
      - router
      - service
      type: object
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          $ref: '#/components/schemas/terminatorCost'
        identity:
          type: string
        identitySecret:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        precedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        router:
          type: string
        service:
          type: string
        tags:
          $ref: '#/components/schemas/tags'
    terminatorDetail:
      allOf:
      - $ref: '#/components/schemas/baseEntity'
      - required:
        - address
        - binding
        - cost
        - dynamicCost
        - identity
        - precedence
        - router
        - routerId
        - service
        - serviceId
        type: object
        properties:
          address:
            type: string
          binding:
            type: string
          cost:
            $ref: '#/components/schemas/terminatorCost'
          dynamicCost:
            $ref: '#/components/schemas/terminatorCost'
          identity:
            type: string
          precedence:
            $ref: '#/components/schemas/terminatorPrecedence'
          router:
            $ref: '#/components/schemas/entityRef'
          routerId:
            type: string
          service:
            $ref: '#/components/schemas/entityRef'
          serviceId:
            type: string
    terminatorList:
      type: array
      items:
        $ref: '#/components/schemas/terminatorDetail'
    terminatorPatch:
      type: object
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          $ref: '#/components/schemas/terminatorCost'
        precedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        router:
          type: string
        service:
          type: string
        tags:
          $ref: '#/components/schemas/tags'
    terminatorPrecedence:
      type: string
      enum:
      - default
      - required
      - failed
    terminatorPrecedenceMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/terminatorPrecedence'
    terminatorUpdate:
      required:
      - address
      - binding
      - router
      - service
      type: object
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          $ref: '#/components/schemas/terminatorCost'
        precedence:
          $ref: '#/components/schemas/terminatorPrecedence'
        router:
          type: string
        service:
          type: string
        tags:
          $ref: '#/components/schemas/tags'
    traceDetail:
      type: object
      properties:
        enabled:
          type: boolean
        traceId:
          type: string
        until:
          type: string
          format: date-time
    traceDetailEnvelope:
      required:
      - data
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/traceDetail'
        meta:
          $ref: '#/components/schemas/meta'
    traceSpec:
      type: object
      properties:
        channels:
          type: array
          items:
            type: string
        duration:
          type: string
        enabled:
          type: boolean
        traceId:
          type: string
    username:
      maxLength: 100
      minLength: 4
      type: string
    usernameNullable:
      maxLength: 100
      minLength: 4
      type: string
      nullable: true
      x-nullable: true
    version:
      type: object
      properties:
        apiVersions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/apiVersion'
        buildDate:
          type: string
          example: 2020-02-11 16:09:08
        capabilities:
          type: array
          items:
            type: string
        revision:
          type: string
          example: ea556fc18740
        runtimeVersion:
          type: string
          example: go1.13.5
        version:
          type: string
          example: v0.9.0
    versionInfo:
      required:
      - arch
      - buildDate
      - os
      - revision
      - version
      type: object
      properties:
        arch:
          type: string
        buildDate:
          type: string
        os:
          type: string
        revision:
          type: string
        version:
          type: string
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oidc/authorize
          tokenUrl: /oidc/token
          scopes:
            openid: openid
    ztSession:
      type: apiKey
      description: An API Key that is provided post authentication
      name: zt-session
      in: header
x-original-swagger-version: "2.0"
