// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package posture_checks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListPostureChecksReader is a Reader for the ListPostureChecks structure.
type ListPostureChecksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPostureChecksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPostureChecksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPostureChecksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListPostureChecksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListPostureChecksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /posture-checks] listPostureChecks", response, response.Code())
	}
}

// NewListPostureChecksOK creates a ListPostureChecksOK with default headers values
func NewListPostureChecksOK() *ListPostureChecksOK {
	return &ListPostureChecksOK{}
}

/*
ListPostureChecksOK describes a response with status code 200, with default header values.

A list of posture checks
*/
type ListPostureChecksOK struct {
	Payload *rest_model.ListPostureCheckEnvelope
}

// IsSuccess returns true when this list posture checks o k response has a 2xx status code
func (o *ListPostureChecksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list posture checks o k response has a 3xx status code
func (o *ListPostureChecksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list posture checks o k response has a 4xx status code
func (o *ListPostureChecksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list posture checks o k response has a 5xx status code
func (o *ListPostureChecksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list posture checks o k response a status code equal to that given
func (o *ListPostureChecksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list posture checks o k response
func (o *ListPostureChecksOK) Code() int {
	return 200
}

func (o *ListPostureChecksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksOK %s", 200, payload)
}

func (o *ListPostureChecksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksOK %s", 200, payload)
}

func (o *ListPostureChecksOK) GetPayload() *rest_model.ListPostureCheckEnvelope {
	return o.Payload
}

func (o *ListPostureChecksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListPostureCheckEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPostureChecksBadRequest creates a ListPostureChecksBadRequest with default headers values
func NewListPostureChecksBadRequest() *ListPostureChecksBadRequest {
	return &ListPostureChecksBadRequest{}
}

/*
ListPostureChecksBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type ListPostureChecksBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list posture checks bad request response has a 2xx status code
func (o *ListPostureChecksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list posture checks bad request response has a 3xx status code
func (o *ListPostureChecksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list posture checks bad request response has a 4xx status code
func (o *ListPostureChecksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list posture checks bad request response has a 5xx status code
func (o *ListPostureChecksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list posture checks bad request response a status code equal to that given
func (o *ListPostureChecksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list posture checks bad request response
func (o *ListPostureChecksBadRequest) Code() int {
	return 400
}

func (o *ListPostureChecksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksBadRequest %s", 400, payload)
}

func (o *ListPostureChecksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksBadRequest %s", 400, payload)
}

func (o *ListPostureChecksBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListPostureChecksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPostureChecksUnauthorized creates a ListPostureChecksUnauthorized with default headers values
func NewListPostureChecksUnauthorized() *ListPostureChecksUnauthorized {
	return &ListPostureChecksUnauthorized{}
}

/*
ListPostureChecksUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListPostureChecksUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list posture checks unauthorized response has a 2xx status code
func (o *ListPostureChecksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list posture checks unauthorized response has a 3xx status code
func (o *ListPostureChecksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list posture checks unauthorized response has a 4xx status code
func (o *ListPostureChecksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list posture checks unauthorized response has a 5xx status code
func (o *ListPostureChecksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list posture checks unauthorized response a status code equal to that given
func (o *ListPostureChecksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list posture checks unauthorized response
func (o *ListPostureChecksUnauthorized) Code() int {
	return 401
}

func (o *ListPostureChecksUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksUnauthorized %s", 401, payload)
}

func (o *ListPostureChecksUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksUnauthorized %s", 401, payload)
}

func (o *ListPostureChecksUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListPostureChecksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPostureChecksTooManyRequests creates a ListPostureChecksTooManyRequests with default headers values
func NewListPostureChecksTooManyRequests() *ListPostureChecksTooManyRequests {
	return &ListPostureChecksTooManyRequests{}
}

/*
ListPostureChecksTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListPostureChecksTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list posture checks too many requests response has a 2xx status code
func (o *ListPostureChecksTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list posture checks too many requests response has a 3xx status code
func (o *ListPostureChecksTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list posture checks too many requests response has a 4xx status code
func (o *ListPostureChecksTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list posture checks too many requests response has a 5xx status code
func (o *ListPostureChecksTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list posture checks too many requests response a status code equal to that given
func (o *ListPostureChecksTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list posture checks too many requests response
func (o *ListPostureChecksTooManyRequests) Code() int {
	return 429
}

func (o *ListPostureChecksTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksTooManyRequests %s", 429, payload)
}

func (o *ListPostureChecksTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /posture-checks][%d] listPostureChecksTooManyRequests %s", 429, payload)
}

func (o *ListPostureChecksTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListPostureChecksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
