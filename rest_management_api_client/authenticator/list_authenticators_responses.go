// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package authenticator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListAuthenticatorsReader is a Reader for the ListAuthenticators structure.
type ListAuthenticatorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuthenticatorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuthenticatorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAuthenticatorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAuthenticatorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListAuthenticatorsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /authenticators] listAuthenticators", response, response.Code())
	}
}

// NewListAuthenticatorsOK creates a ListAuthenticatorsOK with default headers values
func NewListAuthenticatorsOK() *ListAuthenticatorsOK {
	return &ListAuthenticatorsOK{}
}

/*
ListAuthenticatorsOK describes a response with status code 200, with default header values.

A list of authenticators
*/
type ListAuthenticatorsOK struct {
	Payload *rest_model.ListAuthenticatorsEnvelope
}

// IsSuccess returns true when this list authenticators o k response has a 2xx status code
func (o *ListAuthenticatorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list authenticators o k response has a 3xx status code
func (o *ListAuthenticatorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authenticators o k response has a 4xx status code
func (o *ListAuthenticatorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list authenticators o k response has a 5xx status code
func (o *ListAuthenticatorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list authenticators o k response a status code equal to that given
func (o *ListAuthenticatorsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list authenticators o k response
func (o *ListAuthenticatorsOK) Code() int {
	return 200
}

func (o *ListAuthenticatorsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsOK %s", 200, payload)
}

func (o *ListAuthenticatorsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsOK %s", 200, payload)
}

func (o *ListAuthenticatorsOK) GetPayload() *rest_model.ListAuthenticatorsEnvelope {
	return o.Payload
}

func (o *ListAuthenticatorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListAuthenticatorsEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthenticatorsBadRequest creates a ListAuthenticatorsBadRequest with default headers values
func NewListAuthenticatorsBadRequest() *ListAuthenticatorsBadRequest {
	return &ListAuthenticatorsBadRequest{}
}

/*
ListAuthenticatorsBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type ListAuthenticatorsBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list authenticators bad request response has a 2xx status code
func (o *ListAuthenticatorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authenticators bad request response has a 3xx status code
func (o *ListAuthenticatorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authenticators bad request response has a 4xx status code
func (o *ListAuthenticatorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authenticators bad request response has a 5xx status code
func (o *ListAuthenticatorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list authenticators bad request response a status code equal to that given
func (o *ListAuthenticatorsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list authenticators bad request response
func (o *ListAuthenticatorsBadRequest) Code() int {
	return 400
}

func (o *ListAuthenticatorsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsBadRequest %s", 400, payload)
}

func (o *ListAuthenticatorsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsBadRequest %s", 400, payload)
}

func (o *ListAuthenticatorsBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListAuthenticatorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthenticatorsUnauthorized creates a ListAuthenticatorsUnauthorized with default headers values
func NewListAuthenticatorsUnauthorized() *ListAuthenticatorsUnauthorized {
	return &ListAuthenticatorsUnauthorized{}
}

/*
ListAuthenticatorsUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListAuthenticatorsUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list authenticators unauthorized response has a 2xx status code
func (o *ListAuthenticatorsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authenticators unauthorized response has a 3xx status code
func (o *ListAuthenticatorsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authenticators unauthorized response has a 4xx status code
func (o *ListAuthenticatorsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authenticators unauthorized response has a 5xx status code
func (o *ListAuthenticatorsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list authenticators unauthorized response a status code equal to that given
func (o *ListAuthenticatorsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list authenticators unauthorized response
func (o *ListAuthenticatorsUnauthorized) Code() int {
	return 401
}

func (o *ListAuthenticatorsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsUnauthorized %s", 401, payload)
}

func (o *ListAuthenticatorsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsUnauthorized %s", 401, payload)
}

func (o *ListAuthenticatorsUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListAuthenticatorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthenticatorsTooManyRequests creates a ListAuthenticatorsTooManyRequests with default headers values
func NewListAuthenticatorsTooManyRequests() *ListAuthenticatorsTooManyRequests {
	return &ListAuthenticatorsTooManyRequests{}
}

/*
ListAuthenticatorsTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListAuthenticatorsTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list authenticators too many requests response has a 2xx status code
func (o *ListAuthenticatorsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authenticators too many requests response has a 3xx status code
func (o *ListAuthenticatorsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authenticators too many requests response has a 4xx status code
func (o *ListAuthenticatorsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authenticators too many requests response has a 5xx status code
func (o *ListAuthenticatorsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list authenticators too many requests response a status code equal to that given
func (o *ListAuthenticatorsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list authenticators too many requests response
func (o *ListAuthenticatorsTooManyRequests) Code() int {
	return 429
}

func (o *ListAuthenticatorsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsTooManyRequests %s", 429, payload)
}

func (o *ListAuthenticatorsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authenticators][%d] listAuthenticatorsTooManyRequests %s", 429, payload)
}

func (o *ListAuthenticatorsTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListAuthenticatorsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
