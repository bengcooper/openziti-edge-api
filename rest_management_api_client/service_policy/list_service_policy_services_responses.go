// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package service_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListServicePolicyServicesReader is a Reader for the ListServicePolicyServices structure.
type ListServicePolicyServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServicePolicyServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServicePolicyServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListServicePolicyServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListServicePolicyServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListServicePolicyServicesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /service-policies/{id}/services] listServicePolicyServices", response, response.Code())
	}
}

// NewListServicePolicyServicesOK creates a ListServicePolicyServicesOK with default headers values
func NewListServicePolicyServicesOK() *ListServicePolicyServicesOK {
	return &ListServicePolicyServicesOK{}
}

/*
ListServicePolicyServicesOK describes a response with status code 200, with default header values.

A list of services
*/
type ListServicePolicyServicesOK struct {
	Payload *rest_model.ListServicesEnvelope
}

// IsSuccess returns true when this list service policy services o k response has a 2xx status code
func (o *ListServicePolicyServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list service policy services o k response has a 3xx status code
func (o *ListServicePolicyServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service policy services o k response has a 4xx status code
func (o *ListServicePolicyServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list service policy services o k response has a 5xx status code
func (o *ListServicePolicyServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list service policy services o k response a status code equal to that given
func (o *ListServicePolicyServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list service policy services o k response
func (o *ListServicePolicyServicesOK) Code() int {
	return 200
}

func (o *ListServicePolicyServicesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesOK %s", 200, payload)
}

func (o *ListServicePolicyServicesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesOK %s", 200, payload)
}

func (o *ListServicePolicyServicesOK) GetPayload() *rest_model.ListServicesEnvelope {
	return o.Payload
}

func (o *ListServicePolicyServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListServicesEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicePolicyServicesBadRequest creates a ListServicePolicyServicesBadRequest with default headers values
func NewListServicePolicyServicesBadRequest() *ListServicePolicyServicesBadRequest {
	return &ListServicePolicyServicesBadRequest{}
}

/*
ListServicePolicyServicesBadRequest describes a response with status code 400, with default header values.

The requested resource does not exist
*/
type ListServicePolicyServicesBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list service policy services bad request response has a 2xx status code
func (o *ListServicePolicyServicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service policy services bad request response has a 3xx status code
func (o *ListServicePolicyServicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service policy services bad request response has a 4xx status code
func (o *ListServicePolicyServicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list service policy services bad request response has a 5xx status code
func (o *ListServicePolicyServicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list service policy services bad request response a status code equal to that given
func (o *ListServicePolicyServicesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list service policy services bad request response
func (o *ListServicePolicyServicesBadRequest) Code() int {
	return 400
}

func (o *ListServicePolicyServicesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesBadRequest %s", 400, payload)
}

func (o *ListServicePolicyServicesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesBadRequest %s", 400, payload)
}

func (o *ListServicePolicyServicesBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListServicePolicyServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicePolicyServicesUnauthorized creates a ListServicePolicyServicesUnauthorized with default headers values
func NewListServicePolicyServicesUnauthorized() *ListServicePolicyServicesUnauthorized {
	return &ListServicePolicyServicesUnauthorized{}
}

/*
ListServicePolicyServicesUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListServicePolicyServicesUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list service policy services unauthorized response has a 2xx status code
func (o *ListServicePolicyServicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service policy services unauthorized response has a 3xx status code
func (o *ListServicePolicyServicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service policy services unauthorized response has a 4xx status code
func (o *ListServicePolicyServicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list service policy services unauthorized response has a 5xx status code
func (o *ListServicePolicyServicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list service policy services unauthorized response a status code equal to that given
func (o *ListServicePolicyServicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list service policy services unauthorized response
func (o *ListServicePolicyServicesUnauthorized) Code() int {
	return 401
}

func (o *ListServicePolicyServicesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesUnauthorized %s", 401, payload)
}

func (o *ListServicePolicyServicesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesUnauthorized %s", 401, payload)
}

func (o *ListServicePolicyServicesUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListServicePolicyServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicePolicyServicesTooManyRequests creates a ListServicePolicyServicesTooManyRequests with default headers values
func NewListServicePolicyServicesTooManyRequests() *ListServicePolicyServicesTooManyRequests {
	return &ListServicePolicyServicesTooManyRequests{}
}

/*
ListServicePolicyServicesTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListServicePolicyServicesTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list service policy services too many requests response has a 2xx status code
func (o *ListServicePolicyServicesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list service policy services too many requests response has a 3xx status code
func (o *ListServicePolicyServicesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list service policy services too many requests response has a 4xx status code
func (o *ListServicePolicyServicesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list service policy services too many requests response has a 5xx status code
func (o *ListServicePolicyServicesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list service policy services too many requests response a status code equal to that given
func (o *ListServicePolicyServicesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list service policy services too many requests response
func (o *ListServicePolicyServicesTooManyRequests) Code() int {
	return 429
}

func (o *ListServicePolicyServicesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesTooManyRequests %s", 429, payload)
}

func (o *ListServicePolicyServicesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /service-policies/{id}/services][%d] listServicePolicyServicesTooManyRequests %s", 429, payload)
}

func (o *ListServicePolicyServicesTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListServicePolicyServicesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
