// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListIdentitiesReader is a Reader for the ListIdentities structure.
type ListIdentitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIdentitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIdentitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIdentitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIdentitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListIdentitiesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /identities] listIdentities", response, response.Code())
	}
}

// NewListIdentitiesOK creates a ListIdentitiesOK with default headers values
func NewListIdentitiesOK() *ListIdentitiesOK {
	return &ListIdentitiesOK{}
}

/*
ListIdentitiesOK describes a response with status code 200, with default header values.

A list of identities
*/
type ListIdentitiesOK struct {
	Payload *rest_model.ListIdentitiesEnvelope
}

// IsSuccess returns true when this list identities o k response has a 2xx status code
func (o *ListIdentitiesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list identities o k response has a 3xx status code
func (o *ListIdentitiesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identities o k response has a 4xx status code
func (o *ListIdentitiesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list identities o k response has a 5xx status code
func (o *ListIdentitiesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list identities o k response a status code equal to that given
func (o *ListIdentitiesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list identities o k response
func (o *ListIdentitiesOK) Code() int {
	return 200
}

func (o *ListIdentitiesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesOK %s", 200, payload)
}

func (o *ListIdentitiesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesOK %s", 200, payload)
}

func (o *ListIdentitiesOK) GetPayload() *rest_model.ListIdentitiesEnvelope {
	return o.Payload
}

func (o *ListIdentitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListIdentitiesEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentitiesBadRequest creates a ListIdentitiesBadRequest with default headers values
func NewListIdentitiesBadRequest() *ListIdentitiesBadRequest {
	return &ListIdentitiesBadRequest{}
}

/*
ListIdentitiesBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type ListIdentitiesBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identities bad request response has a 2xx status code
func (o *ListIdentitiesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identities bad request response has a 3xx status code
func (o *ListIdentitiesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identities bad request response has a 4xx status code
func (o *ListIdentitiesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identities bad request response has a 5xx status code
func (o *ListIdentitiesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list identities bad request response a status code equal to that given
func (o *ListIdentitiesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list identities bad request response
func (o *ListIdentitiesBadRequest) Code() int {
	return 400
}

func (o *ListIdentitiesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesBadRequest %s", 400, payload)
}

func (o *ListIdentitiesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesBadRequest %s", 400, payload)
}

func (o *ListIdentitiesBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentitiesUnauthorized creates a ListIdentitiesUnauthorized with default headers values
func NewListIdentitiesUnauthorized() *ListIdentitiesUnauthorized {
	return &ListIdentitiesUnauthorized{}
}

/*
ListIdentitiesUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListIdentitiesUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identities unauthorized response has a 2xx status code
func (o *ListIdentitiesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identities unauthorized response has a 3xx status code
func (o *ListIdentitiesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identities unauthorized response has a 4xx status code
func (o *ListIdentitiesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identities unauthorized response has a 5xx status code
func (o *ListIdentitiesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list identities unauthorized response a status code equal to that given
func (o *ListIdentitiesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list identities unauthorized response
func (o *ListIdentitiesUnauthorized) Code() int {
	return 401
}

func (o *ListIdentitiesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesUnauthorized %s", 401, payload)
}

func (o *ListIdentitiesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesUnauthorized %s", 401, payload)
}

func (o *ListIdentitiesUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentitiesTooManyRequests creates a ListIdentitiesTooManyRequests with default headers values
func NewListIdentitiesTooManyRequests() *ListIdentitiesTooManyRequests {
	return &ListIdentitiesTooManyRequests{}
}

/*
ListIdentitiesTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListIdentitiesTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identities too many requests response has a 2xx status code
func (o *ListIdentitiesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identities too many requests response has a 3xx status code
func (o *ListIdentitiesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identities too many requests response has a 4xx status code
func (o *ListIdentitiesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identities too many requests response has a 5xx status code
func (o *ListIdentitiesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list identities too many requests response a status code equal to that given
func (o *ListIdentitiesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list identities too many requests response
func (o *ListIdentitiesTooManyRequests) Code() int {
	return 429
}

func (o *ListIdentitiesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesTooManyRequests %s", 429, payload)
}

func (o *ListIdentitiesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities][%d] listIdentitiesTooManyRequests %s", 429, payload)
}

func (o *ListIdentitiesTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentitiesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
