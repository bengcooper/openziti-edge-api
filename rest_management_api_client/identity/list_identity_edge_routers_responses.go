// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListIdentityEdgeRoutersReader is a Reader for the ListIdentityEdgeRouters structure.
type ListIdentityEdgeRoutersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIdentityEdgeRoutersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIdentityEdgeRoutersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListIdentityEdgeRoutersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIdentityEdgeRoutersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListIdentityEdgeRoutersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /identities/{id}/edge-routers] listIdentityEdgeRouters", response, response.Code())
	}
}

// NewListIdentityEdgeRoutersOK creates a ListIdentityEdgeRoutersOK with default headers values
func NewListIdentityEdgeRoutersOK() *ListIdentityEdgeRoutersOK {
	return &ListIdentityEdgeRoutersOK{}
}

/*
ListIdentityEdgeRoutersOK describes a response with status code 200, with default header values.

A list of edge routers
*/
type ListIdentityEdgeRoutersOK struct {
	Payload *rest_model.ListEdgeRoutersEnvelope
}

// IsSuccess returns true when this list identity edge routers o k response has a 2xx status code
func (o *ListIdentityEdgeRoutersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list identity edge routers o k response has a 3xx status code
func (o *ListIdentityEdgeRoutersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identity edge routers o k response has a 4xx status code
func (o *ListIdentityEdgeRoutersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list identity edge routers o k response has a 5xx status code
func (o *ListIdentityEdgeRoutersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list identity edge routers o k response a status code equal to that given
func (o *ListIdentityEdgeRoutersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list identity edge routers o k response
func (o *ListIdentityEdgeRoutersOK) Code() int {
	return 200
}

func (o *ListIdentityEdgeRoutersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersOK %s", 200, payload)
}

func (o *ListIdentityEdgeRoutersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersOK %s", 200, payload)
}

func (o *ListIdentityEdgeRoutersOK) GetPayload() *rest_model.ListEdgeRoutersEnvelope {
	return o.Payload
}

func (o *ListIdentityEdgeRoutersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListEdgeRoutersEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityEdgeRoutersUnauthorized creates a ListIdentityEdgeRoutersUnauthorized with default headers values
func NewListIdentityEdgeRoutersUnauthorized() *ListIdentityEdgeRoutersUnauthorized {
	return &ListIdentityEdgeRoutersUnauthorized{}
}

/*
ListIdentityEdgeRoutersUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListIdentityEdgeRoutersUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identity edge routers unauthorized response has a 2xx status code
func (o *ListIdentityEdgeRoutersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identity edge routers unauthorized response has a 3xx status code
func (o *ListIdentityEdgeRoutersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identity edge routers unauthorized response has a 4xx status code
func (o *ListIdentityEdgeRoutersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identity edge routers unauthorized response has a 5xx status code
func (o *ListIdentityEdgeRoutersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list identity edge routers unauthorized response a status code equal to that given
func (o *ListIdentityEdgeRoutersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list identity edge routers unauthorized response
func (o *ListIdentityEdgeRoutersUnauthorized) Code() int {
	return 401
}

func (o *ListIdentityEdgeRoutersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersUnauthorized %s", 401, payload)
}

func (o *ListIdentityEdgeRoutersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersUnauthorized %s", 401, payload)
}

func (o *ListIdentityEdgeRoutersUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentityEdgeRoutersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityEdgeRoutersNotFound creates a ListIdentityEdgeRoutersNotFound with default headers values
func NewListIdentityEdgeRoutersNotFound() *ListIdentityEdgeRoutersNotFound {
	return &ListIdentityEdgeRoutersNotFound{}
}

/*
ListIdentityEdgeRoutersNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type ListIdentityEdgeRoutersNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identity edge routers not found response has a 2xx status code
func (o *ListIdentityEdgeRoutersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identity edge routers not found response has a 3xx status code
func (o *ListIdentityEdgeRoutersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identity edge routers not found response has a 4xx status code
func (o *ListIdentityEdgeRoutersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identity edge routers not found response has a 5xx status code
func (o *ListIdentityEdgeRoutersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list identity edge routers not found response a status code equal to that given
func (o *ListIdentityEdgeRoutersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list identity edge routers not found response
func (o *ListIdentityEdgeRoutersNotFound) Code() int {
	return 404
}

func (o *ListIdentityEdgeRoutersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersNotFound %s", 404, payload)
}

func (o *ListIdentityEdgeRoutersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersNotFound %s", 404, payload)
}

func (o *ListIdentityEdgeRoutersNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentityEdgeRoutersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityEdgeRoutersTooManyRequests creates a ListIdentityEdgeRoutersTooManyRequests with default headers values
func NewListIdentityEdgeRoutersTooManyRequests() *ListIdentityEdgeRoutersTooManyRequests {
	return &ListIdentityEdgeRoutersTooManyRequests{}
}

/*
ListIdentityEdgeRoutersTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListIdentityEdgeRoutersTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list identity edge routers too many requests response has a 2xx status code
func (o *ListIdentityEdgeRoutersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list identity edge routers too many requests response has a 3xx status code
func (o *ListIdentityEdgeRoutersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list identity edge routers too many requests response has a 4xx status code
func (o *ListIdentityEdgeRoutersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list identity edge routers too many requests response has a 5xx status code
func (o *ListIdentityEdgeRoutersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list identity edge routers too many requests response a status code equal to that given
func (o *ListIdentityEdgeRoutersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list identity edge routers too many requests response
func (o *ListIdentityEdgeRoutersTooManyRequests) Code() int {
	return 429
}

func (o *ListIdentityEdgeRoutersTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersTooManyRequests %s", 429, payload)
}

func (o *ListIdentityEdgeRoutersTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /identities/{id}/edge-routers][%d] listIdentityEdgeRoutersTooManyRequests %s", 429, payload)
}

func (o *ListIdentityEdgeRoutersTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListIdentityEdgeRoutersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
