// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// CreateConfigTypeReader is a Reader for the CreateConfigType structure.
type CreateConfigTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateConfigTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateConfigTypeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateConfigTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateConfigTypeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateConfigTypeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /config-types] createConfigType", response, response.Code())
	}
}

// NewCreateConfigTypeCreated creates a CreateConfigTypeCreated with default headers values
func NewCreateConfigTypeCreated() *CreateConfigTypeCreated {
	return &CreateConfigTypeCreated{}
}

/*
CreateConfigTypeCreated describes a response with status code 201, with default header values.

The create request was successful and the resource has been added at the following location
*/
type CreateConfigTypeCreated struct {
	Payload *rest_model.CreateEnvelope
}

// IsSuccess returns true when this create config type created response has a 2xx status code
func (o *CreateConfigTypeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create config type created response has a 3xx status code
func (o *CreateConfigTypeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create config type created response has a 4xx status code
func (o *CreateConfigTypeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create config type created response has a 5xx status code
func (o *CreateConfigTypeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create config type created response a status code equal to that given
func (o *CreateConfigTypeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create config type created response
func (o *CreateConfigTypeCreated) Code() int {
	return 201
}

func (o *CreateConfigTypeCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeCreated %s", 201, payload)
}

func (o *CreateConfigTypeCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeCreated %s", 201, payload)
}

func (o *CreateConfigTypeCreated) GetPayload() *rest_model.CreateEnvelope {
	return o.Payload
}

func (o *CreateConfigTypeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.CreateEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConfigTypeBadRequest creates a CreateConfigTypeBadRequest with default headers values
func NewCreateConfigTypeBadRequest() *CreateConfigTypeBadRequest {
	return &CreateConfigTypeBadRequest{}
}

/*
CreateConfigTypeBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type CreateConfigTypeBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create config type bad request response has a 2xx status code
func (o *CreateConfigTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create config type bad request response has a 3xx status code
func (o *CreateConfigTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create config type bad request response has a 4xx status code
func (o *CreateConfigTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create config type bad request response has a 5xx status code
func (o *CreateConfigTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create config type bad request response a status code equal to that given
func (o *CreateConfigTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create config type bad request response
func (o *CreateConfigTypeBadRequest) Code() int {
	return 400
}

func (o *CreateConfigTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeBadRequest %s", 400, payload)
}

func (o *CreateConfigTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeBadRequest %s", 400, payload)
}

func (o *CreateConfigTypeBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateConfigTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConfigTypeUnauthorized creates a CreateConfigTypeUnauthorized with default headers values
func NewCreateConfigTypeUnauthorized() *CreateConfigTypeUnauthorized {
	return &CreateConfigTypeUnauthorized{}
}

/*
CreateConfigTypeUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type CreateConfigTypeUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create config type unauthorized response has a 2xx status code
func (o *CreateConfigTypeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create config type unauthorized response has a 3xx status code
func (o *CreateConfigTypeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create config type unauthorized response has a 4xx status code
func (o *CreateConfigTypeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create config type unauthorized response has a 5xx status code
func (o *CreateConfigTypeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create config type unauthorized response a status code equal to that given
func (o *CreateConfigTypeUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create config type unauthorized response
func (o *CreateConfigTypeUnauthorized) Code() int {
	return 401
}

func (o *CreateConfigTypeUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeUnauthorized %s", 401, payload)
}

func (o *CreateConfigTypeUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeUnauthorized %s", 401, payload)
}

func (o *CreateConfigTypeUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateConfigTypeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateConfigTypeTooManyRequests creates a CreateConfigTypeTooManyRequests with default headers values
func NewCreateConfigTypeTooManyRequests() *CreateConfigTypeTooManyRequests {
	return &CreateConfigTypeTooManyRequests{}
}

/*
CreateConfigTypeTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type CreateConfigTypeTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this create config type too many requests response has a 2xx status code
func (o *CreateConfigTypeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create config type too many requests response has a 3xx status code
func (o *CreateConfigTypeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create config type too many requests response has a 4xx status code
func (o *CreateConfigTypeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create config type too many requests response has a 5xx status code
func (o *CreateConfigTypeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create config type too many requests response a status code equal to that given
func (o *CreateConfigTypeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create config type too many requests response
func (o *CreateConfigTypeTooManyRequests) Code() int {
	return 429
}

func (o *CreateConfigTypeTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeTooManyRequests %s", 429, payload)
}

func (o *CreateConfigTypeTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /config-types][%d] createConfigTypeTooManyRequests %s", 429, payload)
}

func (o *CreateConfigTypeTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *CreateConfigTypeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
