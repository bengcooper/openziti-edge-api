// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListConfigServicesReader is a Reader for the ListConfigServices structure.
type ListConfigServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConfigServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConfigServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListConfigServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListConfigServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListConfigServicesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /configs/{id}/services] listConfigServices", response, response.Code())
	}
}

// NewListConfigServicesOK creates a ListConfigServicesOK with default headers values
func NewListConfigServicesOK() *ListConfigServicesOK {
	return &ListConfigServicesOK{}
}

/*
ListConfigServicesOK describes a response with status code 200, with default header values.

A list of services
*/
type ListConfigServicesOK struct {
	Payload *rest_model.ListServicesEnvelope
}

// IsSuccess returns true when this list config services o k response has a 2xx status code
func (o *ListConfigServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list config services o k response has a 3xx status code
func (o *ListConfigServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config services o k response has a 4xx status code
func (o *ListConfigServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list config services o k response has a 5xx status code
func (o *ListConfigServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list config services o k response a status code equal to that given
func (o *ListConfigServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list config services o k response
func (o *ListConfigServicesOK) Code() int {
	return 200
}

func (o *ListConfigServicesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesOK %s", 200, payload)
}

func (o *ListConfigServicesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesOK %s", 200, payload)
}

func (o *ListConfigServicesOK) GetPayload() *rest_model.ListServicesEnvelope {
	return o.Payload
}

func (o *ListConfigServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListServicesEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigServicesBadRequest creates a ListConfigServicesBadRequest with default headers values
func NewListConfigServicesBadRequest() *ListConfigServicesBadRequest {
	return &ListConfigServicesBadRequest{}
}

/*
ListConfigServicesBadRequest describes a response with status code 400, with default header values.

The requested resource does not exist
*/
type ListConfigServicesBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list config services bad request response has a 2xx status code
func (o *ListConfigServicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config services bad request response has a 3xx status code
func (o *ListConfigServicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config services bad request response has a 4xx status code
func (o *ListConfigServicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config services bad request response has a 5xx status code
func (o *ListConfigServicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list config services bad request response a status code equal to that given
func (o *ListConfigServicesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list config services bad request response
func (o *ListConfigServicesBadRequest) Code() int {
	return 400
}

func (o *ListConfigServicesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesBadRequest %s", 400, payload)
}

func (o *ListConfigServicesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesBadRequest %s", 400, payload)
}

func (o *ListConfigServicesBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListConfigServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigServicesUnauthorized creates a ListConfigServicesUnauthorized with default headers values
func NewListConfigServicesUnauthorized() *ListConfigServicesUnauthorized {
	return &ListConfigServicesUnauthorized{}
}

/*
ListConfigServicesUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListConfigServicesUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list config services unauthorized response has a 2xx status code
func (o *ListConfigServicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config services unauthorized response has a 3xx status code
func (o *ListConfigServicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config services unauthorized response has a 4xx status code
func (o *ListConfigServicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config services unauthorized response has a 5xx status code
func (o *ListConfigServicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list config services unauthorized response a status code equal to that given
func (o *ListConfigServicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list config services unauthorized response
func (o *ListConfigServicesUnauthorized) Code() int {
	return 401
}

func (o *ListConfigServicesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesUnauthorized %s", 401, payload)
}

func (o *ListConfigServicesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesUnauthorized %s", 401, payload)
}

func (o *ListConfigServicesUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListConfigServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigServicesTooManyRequests creates a ListConfigServicesTooManyRequests with default headers values
func NewListConfigServicesTooManyRequests() *ListConfigServicesTooManyRequests {
	return &ListConfigServicesTooManyRequests{}
}

/*
ListConfigServicesTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListConfigServicesTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list config services too many requests response has a 2xx status code
func (o *ListConfigServicesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config services too many requests response has a 3xx status code
func (o *ListConfigServicesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config services too many requests response has a 4xx status code
func (o *ListConfigServicesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config services too many requests response has a 5xx status code
func (o *ListConfigServicesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list config services too many requests response a status code equal to that given
func (o *ListConfigServicesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list config services too many requests response
func (o *ListConfigServicesTooManyRequests) Code() int {
	return 429
}

func (o *ListConfigServicesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesTooManyRequests %s", 429, payload)
}

func (o *ListConfigServicesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /configs/{id}/services][%d] listConfigServicesTooManyRequests %s", 429, payload)
}

func (o *ListConfigServicesTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListConfigServicesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
