// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package external_jwt_signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListExternalJWTSignersReader is a Reader for the ListExternalJWTSigners structure.
type ListExternalJWTSignersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListExternalJWTSignersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListExternalJWTSignersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListExternalJWTSignersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListExternalJWTSignersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListExternalJWTSignersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /external-jwt-signers] listExternalJwtSigners", response, response.Code())
	}
}

// NewListExternalJWTSignersOK creates a ListExternalJWTSignersOK with default headers values
func NewListExternalJWTSignersOK() *ListExternalJWTSignersOK {
	return &ListExternalJWTSignersOK{}
}

/*
ListExternalJWTSignersOK describes a response with status code 200, with default header values.

A list of External JWT Signers
*/
type ListExternalJWTSignersOK struct {
	Payload *rest_model.ListExternalJWTSignersEnvelope
}

// IsSuccess returns true when this list external Jwt signers o k response has a 2xx status code
func (o *ListExternalJWTSignersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list external Jwt signers o k response has a 3xx status code
func (o *ListExternalJWTSignersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external Jwt signers o k response has a 4xx status code
func (o *ListExternalJWTSignersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list external Jwt signers o k response has a 5xx status code
func (o *ListExternalJWTSignersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list external Jwt signers o k response a status code equal to that given
func (o *ListExternalJWTSignersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list external Jwt signers o k response
func (o *ListExternalJWTSignersOK) Code() int {
	return 200
}

func (o *ListExternalJWTSignersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersOK %s", 200, payload)
}

func (o *ListExternalJWTSignersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersOK %s", 200, payload)
}

func (o *ListExternalJWTSignersOK) GetPayload() *rest_model.ListExternalJWTSignersEnvelope {
	return o.Payload
}

func (o *ListExternalJWTSignersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListExternalJWTSignersEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExternalJWTSignersBadRequest creates a ListExternalJWTSignersBadRequest with default headers values
func NewListExternalJWTSignersBadRequest() *ListExternalJWTSignersBadRequest {
	return &ListExternalJWTSignersBadRequest{}
}

/*
ListExternalJWTSignersBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type ListExternalJWTSignersBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list external Jwt signers bad request response has a 2xx status code
func (o *ListExternalJWTSignersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list external Jwt signers bad request response has a 3xx status code
func (o *ListExternalJWTSignersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external Jwt signers bad request response has a 4xx status code
func (o *ListExternalJWTSignersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list external Jwt signers bad request response has a 5xx status code
func (o *ListExternalJWTSignersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list external Jwt signers bad request response a status code equal to that given
func (o *ListExternalJWTSignersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list external Jwt signers bad request response
func (o *ListExternalJWTSignersBadRequest) Code() int {
	return 400
}

func (o *ListExternalJWTSignersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersBadRequest %s", 400, payload)
}

func (o *ListExternalJWTSignersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersBadRequest %s", 400, payload)
}

func (o *ListExternalJWTSignersBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListExternalJWTSignersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExternalJWTSignersUnauthorized creates a ListExternalJWTSignersUnauthorized with default headers values
func NewListExternalJWTSignersUnauthorized() *ListExternalJWTSignersUnauthorized {
	return &ListExternalJWTSignersUnauthorized{}
}

/*
ListExternalJWTSignersUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListExternalJWTSignersUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list external Jwt signers unauthorized response has a 2xx status code
func (o *ListExternalJWTSignersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list external Jwt signers unauthorized response has a 3xx status code
func (o *ListExternalJWTSignersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external Jwt signers unauthorized response has a 4xx status code
func (o *ListExternalJWTSignersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list external Jwt signers unauthorized response has a 5xx status code
func (o *ListExternalJWTSignersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list external Jwt signers unauthorized response a status code equal to that given
func (o *ListExternalJWTSignersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list external Jwt signers unauthorized response
func (o *ListExternalJWTSignersUnauthorized) Code() int {
	return 401
}

func (o *ListExternalJWTSignersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersUnauthorized %s", 401, payload)
}

func (o *ListExternalJWTSignersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersUnauthorized %s", 401, payload)
}

func (o *ListExternalJWTSignersUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListExternalJWTSignersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListExternalJWTSignersTooManyRequests creates a ListExternalJWTSignersTooManyRequests with default headers values
func NewListExternalJWTSignersTooManyRequests() *ListExternalJWTSignersTooManyRequests {
	return &ListExternalJWTSignersTooManyRequests{}
}

/*
ListExternalJWTSignersTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListExternalJWTSignersTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list external Jwt signers too many requests response has a 2xx status code
func (o *ListExternalJWTSignersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list external Jwt signers too many requests response has a 3xx status code
func (o *ListExternalJWTSignersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list external Jwt signers too many requests response has a 4xx status code
func (o *ListExternalJWTSignersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list external Jwt signers too many requests response has a 5xx status code
func (o *ListExternalJWTSignersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list external Jwt signers too many requests response a status code equal to that given
func (o *ListExternalJWTSignersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list external Jwt signers too many requests response
func (o *ListExternalJWTSignersTooManyRequests) Code() int {
	return 429
}

func (o *ListExternalJWTSignersTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersTooManyRequests %s", 429, payload)
}

func (o *ListExternalJWTSignersTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /external-jwt-signers][%d] listExternalJwtSignersTooManyRequests %s", 429, payload)
}

func (o *ListExternalJWTSignersTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListExternalJWTSignersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
