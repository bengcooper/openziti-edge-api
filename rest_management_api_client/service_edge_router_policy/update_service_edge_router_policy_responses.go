// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package service_edge_router_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// UpdateServiceEdgeRouterPolicyReader is a Reader for the UpdateServiceEdgeRouterPolicy structure.
type UpdateServiceEdgeRouterPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServiceEdgeRouterPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateServiceEdgeRouterPolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServiceEdgeRouterPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateServiceEdgeRouterPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServiceEdgeRouterPolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateServiceEdgeRouterPolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /service-edge-router-policies/{id}] updateServiceEdgeRouterPolicy", response, response.Code())
	}
}

// NewUpdateServiceEdgeRouterPolicyOK creates a UpdateServiceEdgeRouterPolicyOK with default headers values
func NewUpdateServiceEdgeRouterPolicyOK() *UpdateServiceEdgeRouterPolicyOK {
	return &UpdateServiceEdgeRouterPolicyOK{}
}

/*
UpdateServiceEdgeRouterPolicyOK describes a response with status code 200, with default header values.

The update request was successful and the resource has been altered
*/
type UpdateServiceEdgeRouterPolicyOK struct {
	Payload *rest_model.Empty
}

// IsSuccess returns true when this update service edge router policy o k response has a 2xx status code
func (o *UpdateServiceEdgeRouterPolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update service edge router policy o k response has a 3xx status code
func (o *UpdateServiceEdgeRouterPolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service edge router policy o k response has a 4xx status code
func (o *UpdateServiceEdgeRouterPolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update service edge router policy o k response has a 5xx status code
func (o *UpdateServiceEdgeRouterPolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update service edge router policy o k response a status code equal to that given
func (o *UpdateServiceEdgeRouterPolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update service edge router policy o k response
func (o *UpdateServiceEdgeRouterPolicyOK) Code() int {
	return 200
}

func (o *UpdateServiceEdgeRouterPolicyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyOK %s", 200, payload)
}

func (o *UpdateServiceEdgeRouterPolicyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyOK %s", 200, payload)
}

func (o *UpdateServiceEdgeRouterPolicyOK) GetPayload() *rest_model.Empty {
	return o.Payload
}

func (o *UpdateServiceEdgeRouterPolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.Empty)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceEdgeRouterPolicyBadRequest creates a UpdateServiceEdgeRouterPolicyBadRequest with default headers values
func NewUpdateServiceEdgeRouterPolicyBadRequest() *UpdateServiceEdgeRouterPolicyBadRequest {
	return &UpdateServiceEdgeRouterPolicyBadRequest{}
}

/*
UpdateServiceEdgeRouterPolicyBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type UpdateServiceEdgeRouterPolicyBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this update service edge router policy bad request response has a 2xx status code
func (o *UpdateServiceEdgeRouterPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update service edge router policy bad request response has a 3xx status code
func (o *UpdateServiceEdgeRouterPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service edge router policy bad request response has a 4xx status code
func (o *UpdateServiceEdgeRouterPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update service edge router policy bad request response has a 5xx status code
func (o *UpdateServiceEdgeRouterPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update service edge router policy bad request response a status code equal to that given
func (o *UpdateServiceEdgeRouterPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update service edge router policy bad request response
func (o *UpdateServiceEdgeRouterPolicyBadRequest) Code() int {
	return 400
}

func (o *UpdateServiceEdgeRouterPolicyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyBadRequest %s", 400, payload)
}

func (o *UpdateServiceEdgeRouterPolicyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyBadRequest %s", 400, payload)
}

func (o *UpdateServiceEdgeRouterPolicyBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceEdgeRouterPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceEdgeRouterPolicyUnauthorized creates a UpdateServiceEdgeRouterPolicyUnauthorized with default headers values
func NewUpdateServiceEdgeRouterPolicyUnauthorized() *UpdateServiceEdgeRouterPolicyUnauthorized {
	return &UpdateServiceEdgeRouterPolicyUnauthorized{}
}

/*
UpdateServiceEdgeRouterPolicyUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type UpdateServiceEdgeRouterPolicyUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this update service edge router policy unauthorized response has a 2xx status code
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update service edge router policy unauthorized response has a 3xx status code
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service edge router policy unauthorized response has a 4xx status code
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update service edge router policy unauthorized response has a 5xx status code
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update service edge router policy unauthorized response a status code equal to that given
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update service edge router policy unauthorized response
func (o *UpdateServiceEdgeRouterPolicyUnauthorized) Code() int {
	return 401
}

func (o *UpdateServiceEdgeRouterPolicyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyUnauthorized %s", 401, payload)
}

func (o *UpdateServiceEdgeRouterPolicyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyUnauthorized %s", 401, payload)
}

func (o *UpdateServiceEdgeRouterPolicyUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceEdgeRouterPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceEdgeRouterPolicyNotFound creates a UpdateServiceEdgeRouterPolicyNotFound with default headers values
func NewUpdateServiceEdgeRouterPolicyNotFound() *UpdateServiceEdgeRouterPolicyNotFound {
	return &UpdateServiceEdgeRouterPolicyNotFound{}
}

/*
UpdateServiceEdgeRouterPolicyNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type UpdateServiceEdgeRouterPolicyNotFound struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this update service edge router policy not found response has a 2xx status code
func (o *UpdateServiceEdgeRouterPolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update service edge router policy not found response has a 3xx status code
func (o *UpdateServiceEdgeRouterPolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service edge router policy not found response has a 4xx status code
func (o *UpdateServiceEdgeRouterPolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update service edge router policy not found response has a 5xx status code
func (o *UpdateServiceEdgeRouterPolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update service edge router policy not found response a status code equal to that given
func (o *UpdateServiceEdgeRouterPolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update service edge router policy not found response
func (o *UpdateServiceEdgeRouterPolicyNotFound) Code() int {
	return 404
}

func (o *UpdateServiceEdgeRouterPolicyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyNotFound %s", 404, payload)
}

func (o *UpdateServiceEdgeRouterPolicyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyNotFound %s", 404, payload)
}

func (o *UpdateServiceEdgeRouterPolicyNotFound) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceEdgeRouterPolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServiceEdgeRouterPolicyTooManyRequests creates a UpdateServiceEdgeRouterPolicyTooManyRequests with default headers values
func NewUpdateServiceEdgeRouterPolicyTooManyRequests() *UpdateServiceEdgeRouterPolicyTooManyRequests {
	return &UpdateServiceEdgeRouterPolicyTooManyRequests{}
}

/*
UpdateServiceEdgeRouterPolicyTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type UpdateServiceEdgeRouterPolicyTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this update service edge router policy too many requests response has a 2xx status code
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update service edge router policy too many requests response has a 3xx status code
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update service edge router policy too many requests response has a 4xx status code
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update service edge router policy too many requests response has a 5xx status code
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update service edge router policy too many requests response a status code equal to that given
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update service edge router policy too many requests response
func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) Code() int {
	return 429
}

func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyTooManyRequests %s", 429, payload)
}

func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /service-edge-router-policies/{id}][%d] updateServiceEdgeRouterPolicyTooManyRequests %s", 429, payload)
}

func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *UpdateServiceEdgeRouterPolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
