// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package router

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// ListTransitRoutersReader is a Reader for the ListTransitRouters structure.
type ListTransitRoutersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTransitRoutersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTransitRoutersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTransitRoutersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListTransitRoutersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListTransitRoutersTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /transit-routers] listTransitRouters", response, response.Code())
	}
}

// NewListTransitRoutersOK creates a ListTransitRoutersOK with default headers values
func NewListTransitRoutersOK() *ListTransitRoutersOK {
	return &ListTransitRoutersOK{}
}

/*
ListTransitRoutersOK describes a response with status code 200, with default header values.

A list of specifications
*/
type ListTransitRoutersOK struct {
	Payload *rest_model.ListRoutersEnvelope
}

// IsSuccess returns true when this list transit routers o k response has a 2xx status code
func (o *ListTransitRoutersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list transit routers o k response has a 3xx status code
func (o *ListTransitRoutersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transit routers o k response has a 4xx status code
func (o *ListTransitRoutersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list transit routers o k response has a 5xx status code
func (o *ListTransitRoutersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list transit routers o k response a status code equal to that given
func (o *ListTransitRoutersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list transit routers o k response
func (o *ListTransitRoutersOK) Code() int {
	return 200
}

func (o *ListTransitRoutersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersOK %s", 200, payload)
}

func (o *ListTransitRoutersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersOK %s", 200, payload)
}

func (o *ListTransitRoutersOK) GetPayload() *rest_model.ListRoutersEnvelope {
	return o.Payload
}

func (o *ListTransitRoutersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.ListRoutersEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransitRoutersBadRequest creates a ListTransitRoutersBadRequest with default headers values
func NewListTransitRoutersBadRequest() *ListTransitRoutersBadRequest {
	return &ListTransitRoutersBadRequest{}
}

/*
ListTransitRoutersBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type ListTransitRoutersBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list transit routers bad request response has a 2xx status code
func (o *ListTransitRoutersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transit routers bad request response has a 3xx status code
func (o *ListTransitRoutersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transit routers bad request response has a 4xx status code
func (o *ListTransitRoutersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transit routers bad request response has a 5xx status code
func (o *ListTransitRoutersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list transit routers bad request response a status code equal to that given
func (o *ListTransitRoutersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list transit routers bad request response
func (o *ListTransitRoutersBadRequest) Code() int {
	return 400
}

func (o *ListTransitRoutersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersBadRequest %s", 400, payload)
}

func (o *ListTransitRoutersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersBadRequest %s", 400, payload)
}

func (o *ListTransitRoutersBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListTransitRoutersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransitRoutersUnauthorized creates a ListTransitRoutersUnauthorized with default headers values
func NewListTransitRoutersUnauthorized() *ListTransitRoutersUnauthorized {
	return &ListTransitRoutersUnauthorized{}
}

/*
ListTransitRoutersUnauthorized describes a response with status code 401, with default header values.

The supplied session does not have the correct access rights to request this resource
*/
type ListTransitRoutersUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list transit routers unauthorized response has a 2xx status code
func (o *ListTransitRoutersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transit routers unauthorized response has a 3xx status code
func (o *ListTransitRoutersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transit routers unauthorized response has a 4xx status code
func (o *ListTransitRoutersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transit routers unauthorized response has a 5xx status code
func (o *ListTransitRoutersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list transit routers unauthorized response a status code equal to that given
func (o *ListTransitRoutersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list transit routers unauthorized response
func (o *ListTransitRoutersUnauthorized) Code() int {
	return 401
}

func (o *ListTransitRoutersUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersUnauthorized %s", 401, payload)
}

func (o *ListTransitRoutersUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersUnauthorized %s", 401, payload)
}

func (o *ListTransitRoutersUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListTransitRoutersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTransitRoutersTooManyRequests creates a ListTransitRoutersTooManyRequests with default headers values
func NewListTransitRoutersTooManyRequests() *ListTransitRoutersTooManyRequests {
	return &ListTransitRoutersTooManyRequests{}
}

/*
ListTransitRoutersTooManyRequests describes a response with status code 429, with default header values.

The resource requested is rate limited and the rate limit has been exceeded
*/
type ListTransitRoutersTooManyRequests struct {
	Payload *rest_model.APIErrorEnvelope
}

// IsSuccess returns true when this list transit routers too many requests response has a 2xx status code
func (o *ListTransitRoutersTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list transit routers too many requests response has a 3xx status code
func (o *ListTransitRoutersTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list transit routers too many requests response has a 4xx status code
func (o *ListTransitRoutersTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list transit routers too many requests response has a 5xx status code
func (o *ListTransitRoutersTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list transit routers too many requests response a status code equal to that given
func (o *ListTransitRoutersTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list transit routers too many requests response
func (o *ListTransitRoutersTooManyRequests) Code() int {
	return 429
}

func (o *ListTransitRoutersTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersTooManyRequests %s", 429, payload)
}

func (o *ListTransitRoutersTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /transit-routers][%d] listTransitRoutersTooManyRequests %s", 429, payload)
}

func (o *ListTransitRoutersTooManyRequests) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *ListTransitRoutersTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
